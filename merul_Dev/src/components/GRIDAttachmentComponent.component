<apex:component controller="GRIDAttachmentController" allowDML="true">
    <apex:form id="Attachmentform" styleClass="records">
    
    <style>
            #dragDropSection {
                    text-align: center;
                    padding: 1.125em;
            }
            #droplabel {
                padding-left: 43%;
            }
            #dropbox {
                    width: 90%; 
                    height:30px;
                    padding: 1.145em;
                    margin: 0 auto;
                    margin-bottom:14px;
                    border: 6px white double;
                    color:white;
                    font:weight:bold;
                    font-size:14px;
                    border-color: white !important;
                    border-radius:20px;
                    background-color:#69c;
            }
            #preview {
                display: none;
                margin: 1.125em auto;
                border: 1px solid pink;
            }
            #loading{
                color:#32B2DB;
            }
        </style>
        
        <apex:actionFunction action="{!CollectData}" name="collectDataBase64" reRender="Attachmentform" status="loadingPanel" >
            <apex:param name="data" id="data" value="" />
            <apex:param name="name" id="name" value="" />
        </apex:actionFunction>
        
        <apex:outputPanel id="attchmntTable">
        <script type="text/javascript">
            
            t$ = jQuery.noConflict();
            t$(document).ready(function()
            {
               t$("a").attr("onmouseover","");
               t$("[id*='attachmentTab_lbl']").text( 'Attachments'+' ({!attchmntRecordCount})');
               
               t$('#attachmentTableInner tr').hover(
                    function() {
                       t$(this).addClass('hoverhighlight');
                    }, function() {
                        t$(this).removeClass('hoverhighlight');
                    });
            });
            
            t$(".saveBtn").click(function()
            {    
                t$('.saveBtn').prop('disabled', true);
            });
            
        </script>
         <apex:outputPanel id="dragDropSection">
            <div style="border-width:2px;border:4px #69c;height:auto;width:auto;border-radius:17px;">  &nbsp; 
                <div id="dropbox">
                    <span id="droplabel">Drop files to attach</span>
                </div>
                <!--
                apex:outputPanel id="Op1">
                    <img id="preview" src="" alt="[ image will display here ]" />
                </apex:outputPanel
                -->
            </div>
        </apex:outputPanel>
            <apex:pageBlock mode="inlineEdit">
                <apex:pageBlockButtons location="top">
                    <apex:CommandButton action="{!refreshAttachments}" onclick="attachFile()" value="Attach File" rerender="Attachmentform" immediate="true" status="loadingPanel" />
                    <apex:CommandButton action="{!editAllAttachments}" value="Edit All" rerender="Attachmentform" status="loadingPanel"/>
                    <input type="button" onclick="runSaveAttachments()" class="btn saveBtn" value="Save" status="loadingPanel" /> 
                    <apex:CommandButton action="{!refreshAttachments}" value="Refresh" rerender="Attachmentform" status="loadingPanel" immediate="true"/>
                    <apex:CommandButton action="{!refreshAttachments}" value="Cancel" rerender="Attachmentform" status="loadingPanel" immediate="true"/>
<!--                     <apex:commandButton value="Submission Wizard" onclick="submissionWizard()" immediate="true"  rerender="Attachmentform"/> -->
               </apex:pageBlockButtons>
            <apex:pageMessages id="attchmntpgMsgId" escape="false" />

            <table  class="list" border="0" cellpadding="0" cellspacing="0" id="attachmentTableInner">
                <tbody>
                
                    <tr class="headerRow">
                        <th>Record</th>
                        <th>Action</th>
                        <th><div>
                            <apex:outputLabel value="Name"/>
                            <img src="{!IF(attchmntSortExprFieldApi=='Name',IF(attchmntSortDirection=='ASC',urlfor($Resource.GRIDResource
                                        ,'GRIDResource/Images/Sort_Asc.png'),urlfor($Resource.GRIDResource, 'GRIDResource/Images/Sort_Desc.png')),urlfor($Resource.GRIDResource
                                        ,'GRIDResource/Images/Sort_Both.png'))}" style="height:11px;" name ="Name" class="sorting" onclick="sortCallAttachments('text');" />
                        </div></th>
                        <th><div>
                            <apex:outputLabel value="Private"/>
                            <img src="{!IF(attchmntSortExprFieldApi=='IsPrivate',IF(attchmntSortDirection=='ASC',urlfor($Resource.GRIDResource
                                        ,'GRIDResource/Images/Sort_Asc.png'),urlfor($Resource.GRIDResource, 'GRIDResource/Images/Sort_Desc.png')),urlfor($Resource.GRIDResource
                                        ,'GRIDResource/Images/Sort_Both.png'))}" style="height:11px;" name ="IsPrivate" class="sorting" onclick="sortCallAttachments('Boolean');" />
                        </div></th>
                        <th><div>
                            <apex:outputLabel value="Description"/>
                        </div></th>
                        <th><div>
                            <apex:outputLabel value="Last Modified"/>
                            <img src="{!IF(attchmntSortExprFieldApi=='SystemModstamp',IF(attchmntSortDirection=='ASC',urlfor($Resource.GRIDResource
                                        ,'GRIDResource/Images/Sort_Asc.png'),urlfor($Resource.GRIDResource, 'GRIDResource/Images/Sort_Desc.png')),urlfor($Resource.GRIDResource
                                        ,'GRIDResource/Images/Sort_Both.png'))}" style="height:11px;" name ="SystemModstamp" class="sorting" onclick="sortCallAttachments('datetime');" />
                         </div></th>
                        <th><div>
                            <apex:outputLabel value="Uploaded"/>
                            <img src="{!IF(attchmntSortExprFieldApi=='CreatedDate',IF(attchmntSortDirection=='ASC',urlfor($Resource.GRIDResource
                                        ,'GRIDResource/Images/Sort_Asc.png'),urlfor($Resource.GRIDResource, 'GRIDResource/Images/Sort_Desc.png')),urlfor($Resource.GRIDResource
                                        ,'GRIDResource/Images/Sort_Both.png'))}" style="height:11px;" name ="CreatedDate" class="sorting" onclick="sortCallAttachments('datetime');" />
                        </div></th>
                    </tr>
                    <apex:repeat value="{!attchmntWrapperLst}" var="attchmntWraper" >
                        <tr class="dataRow">
                            <td>
                                <apex:outputtext value="{!attchmntWraper.attchmntIndex + 1}"/>
                            </td>
                            <td>
                                <apex:outputLink value="/{!attchmntWraper.attchmnt.Id}" target="blank" rendered="{!NOT(ISBLANK(attchmntWraper.attchmnt.Id))}"> View </apex:outputLink>
                                <apex:outputLabel value="| " rendered="{!NOT(ISBLANK(attchmntWraper.attchmnt.Id))}"/>
                                <apex:commandLink action="{!deleteAttachment}" value="Del" rerender="Attachmentform" rendered="{!NOT(ISBLANK(attchmntWraper.attchmnt.Id))}" status="loadingPanel">
                                    <apex:param name="attchmntIndexToRemove" value="{!attchmntWraper.attchmntIndex}" assignTo="{!attchmntIndexToRemove}"></apex:param>
                                </apex:commandLink>
                            <apex:commandLink action="{!deleteAttachment}" value="Remove" rerender="Attachmentform" rendered="{!(ISBLANK(attchmntWraper.attchmnt.Id))}"  styleClass="removeRow" status="loadingPanel" immediate="true">
                                <apex:param name="attchmntIndexToRemove" value="{!attchmntWraper.attchmntIndex}" assignTo="{!attchmntIndexToRemove}"></apex:param>
                            </apex:commandLink>
                       </td>
                            
                                <td>
                                    <apex:outputField value="{!attchmntWraper.attchmnt.Name}" rendered="{!AND(IF(attchmntWraper.attchmntEdit = false, true, false),NOT(ISBLANK(attchmntWraper.attchmnt.Id)))}" >
                                    </apex:outputField>
                                    <apex:inputField value="{!attchmntWraper.attchmnt.Name}" rendered="{!OR(IF(attchmntWraper.attchmntEdit = true, true, false),ISBLANK(attchmntWraper.attchmnt.Id))}" />
                                      
                                </td>
                                <td>
                                    <apex:outputField value="{!attchmntWraper.attchmnt.IsPrivate}" rendered="{!AND(IF(attchmntWraper.attchmntEdit = false, true, false),NOT(ISBLANK(attchmntWraper.attchmnt.Id)))}" />
                                    <apex:inputField value="{!attchmntWraper.attchmnt.IsPrivate}" rendered="{!OR(IF(attchmntWraper.attchmntEdit = true, true, false),ISBLANK(attchmntWraper.attchmnt.Id))}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!attchmntWraper.attchmnt.Description}" rendered="{!AND(IF(attchmntWraper.attchmntEdit = false, true, false),NOT(ISBLANK(attchmntWraper.attchmnt.Id)))}" />
                                    <apex:inputField value="{!attchmntWraper.attchmnt.Description}" rendered="{!OR(IF(attchmntWraper.attchmntEdit = true, true, false),ISBLANK(attchmntWraper.attchmnt.Id))}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!attchmntWraper.attchmnt.SystemModstamp}" rendered="{!AND(IF(attchmntWraper.attchmntEdit = false, true, false),NOT(ISBLANK(attchmntWraper.attchmnt.Id)))}" />
                                    <apex:inputField value="{!attchmntWraper.attchmnt.SystemModstamp}" rendered="{!OR(IF(attchmntWraper.attchmntEdit = true, true, false),ISBLANK(attchmntWraper.attchmnt.Id))}"/>
                                </td>
                                <td>
                                    <apex:outputField value="{!attchmntWraper.attchmnt.CreatedDate}" rendered="{!AND(IF(attchmntWraper.attchmntEdit = false, true, false),NOT(ISBLANK(attchmntWraper.attchmnt.Id)))}" />
                                    <apex:inputField value="{!attchmntWraper.attchmnt.CreatedDate}" rendered="{!OR(IF(attchmntWraper.attchmntEdit = true, true, false),ISBLANK(attchmntWraper.attchmnt.Id))}"/>
                                </td>
                               
                            
                        </tr>
                        </apex:repeat>
                    </tbody>
                   
                </table>
                <br />
               {!IF((attchmntOffsetsize + 1) > attchmntRecordCount, IF(attchmntRecordCount - attchmntBlockSize <= 0, 0, attchmntRecordCount - attchmntBlockSize), attchmntOffsetsize + 1)} - {!attchmntWrapperLst.size + attchmntOffsetsize} of {!attchmntRecordCount}
                    <apex:pageBlockButtons >
                        <apex:commandButton style="left:75px;position:relative;" value="<<" 
                                            rerender="attchmntTable" action="{!beginningAttachments}" status="loadingPanel" disabled="{!IF(attchmntOffsetsize == 0, true, false)}"/>
                        <apex:commandButton style="left:95px;position:relative;" value="<" 
                                            rerender="attchmntTable" action="{!previousAttachments}"  status="loadingPanel" disabled="{!IF(attchmntOffsetsize == 0, true, false)}"/>
                        <apex:commandButton style="left:115px;position:relative;" value = ">" 
                                            rerender="attchmntTable" action="{!nextAttachments}" status="loadingPanel" disabled ="{!IF(attchmntWrapperLst.size + attchmntOffsetsize >= attchmntRecordCount, true, false)}" />
                        <apex:commandButton style="left:135px;position:relative;" value = ">>" 
                                            rerender="attchmntTable" action="{!endAttachments}" status="loadingPanel" disabled ="{!IF(attchmntWrapperLst.size + attchmntOffsetsize >= attchmntRecordCount, true, false)}"/>
                    </apex:pageBlockButtons>
            </apex:pageBlock>
            
            <apex:inputHidden value="{!attchmntSortExpression}" id="attchmntSortHiddencriterian"/>
            <apex:inputHidden value="{!attchmntSortDirection}" id="attchmntSortHiddenOrder"/>
            <apex:inputHidden value="{!attchmntSortExprFieldApi}" id="attchmntSortHiddenFieldApi"/>
        </apex:outputPanel>
        
        <apex:actionFunction action="{!saveAttachments}" name="saveAttachments" rerender="Attachmentform" status="loadingPanel"/>
        <apex:actionFunction action="{!sortAttachments}" name="sortAllAttachments" rerender="Attachmentform" status="loadingPanel" >
            <apex:param name="attchmntTypeParam" value="" /> 
        </apex:actionFunction>
                
    <script type="text/javascript">
    
     var fName = new Array();
     var dropbox = document.getElementById('dropbox');
     var count = 0;
     
     
        function runSaveAttachments() 
        {
            setTimeout(function() 
            {               
                saveAttachments();
            }, 100);
        }
        
        function sortCallAttachments(attchmntFieldDataType)
        {
            /*
              event.target will have the DOM structure on which the event is fired.So here salesforce automically will
              pick up native html id of the selector
            */
                
                 var attchmntElement= event.target;
                 var newattchmntSortCol = t$(attchmntElement).attr("Name"); // new sort field
                 t$("input[id$='attchmntSortHiddenFieldApi']").val(newattchmntSortCol);
                 var oldattchmntSortCol = t$("input[id$='attchmntSortHiddencriterian']").val();
                 var indexAttchmnt;
                 var attchmntTempSortExpr;
                 if(newattchmntSortCol.endsWith('__c')) 
                 {
                     indexAttchmnt = newattchmntSortCol.indexOf('__');
                 }
                 else if(newattchmntSortCol.endsWith('Id'))
                 {
                     indexAttchmnt = newattchmntSortCol.indexOf('Id');
                 }
                if(indexAttchmnt != null) {
                    attchmntTempSortExpr = newattchmntSortCol.substring(0, indexAttchmnt);
                }
                else 
                {
                    attchmntTempSortExpr = newattchmntSortCol;
                }
                 
               //if(String(newattchmntSortCol) == String(oldattchmntSortCol))
               if(oldattchmntSortCol.indexOf(attchmntTempSortExpr) != -1)
                {
                    
                    if(String(t$("input[id$='attchmntSortHiddenOrder']").val()) == "ASC")
                    {
                      t$("input[id$='attchmntSortHiddenOrder']").val("DESC");
                      t$(attchmntElement).removeClass('SortAsc').addClass('SortDesc');
                    }
                    else
                    {
                      t$("input[id$='attchmntSortHiddenOrder']").val("ASC");
                      t$(attchmntElement).removeClass('SortDesc').addClass('SortAsc');
                    }
                    
                    t$("input[id$='attchmntSortHiddencriterian']").val(newattchmntSortCol);
                    sortAllAttachments(attchmntFieldDataType);
                
                }
                else
                {
                    t$("input[id$='attchmntSortHiddencriterian']").val(newattchmntSortCol);
                    t$("input[id$='attchmntSortHiddenOrder']").val("ASC");
                    t$(attchmntElement).removeClass('sorting').addClass('SortAsc');
                    sortAllAttachments(attchmntFieldDataType);
                }
        }
        
        function attachFile()
        {
            window.open('/p/attach/NoteAttach?pid={!opportunity.Id}&parentname={!opportunity.Name}&retURL=%2F{!oppId}','_blank');
        }

          var singleError = false; 
           
            // # Using an EventListener object
            var dropListener = 
            {
                
                handleEvent: function(event)
                {
                    if (event.type === 'dragenter') { this.onDragEnter(event); }
                    if (event.type === 'dragexit') { this.onDragExit(event); }
                    if (event.type === 'dragover') { this.onDragOver(event); }
                    if (event.type === 'drop') { this.onDragDrop(event); }
                },
    
                onDragEnter: function(event)
                {
                
                    event.dataTransfer.dropEffect = 'move';
                    event.preventDefault();
                    event.stopPropagation();
                   
                },
        
                onDragExit: function(event)
                {
                    event.preventDefault();
                    event.stopPropagation();
                },
        
                onDragOver: function(event)
                {
                    event.preventDefault();
                    event.stopPropagation();
                },
        
                onDragDrop: function(event)
                {
                    event.preventDefault();
                    event.stopPropagation();
                    
                    var files = event.dataTransfer.files,
                    file = files;
                    if (files.length == 1 ) 
                    {
                        document.getElementById('droplabel').innerHTML ='Uploading ' + files[0].name;
                    }
                    else if (files.length  >  1) 
                    {
                        document.getElementById('droplabel').innerHTML ='Uploading ' + files.length + ' files';
                    }
                    
                    if (files.length) 
                    {
                        for (i = 0; i < files.length; i++) 
                        { 
                            file = files[i];
                            this.processImage(file, i);
                        }
                    }
                },
        
                processImage: function(file, i)
                {
                    fName.push(file.name);
                    var reader = new FileReader();
                    reader.readAsDataURL(file);
                    //reader.onloadend = this.onReaderLoadEnd(this.reader);
                    
                    reader.onloadend = function(event)
                    {
                      
                        if(reader.result.length < 8000000)
                        {
                          collectDataBase64( reader.result, file.name);
                          count++;
                        }
                        else
                        {
                           alert('File name '+file.name+' is too large for Drag and drop.Please use Attach File button to upload the file.');
                           document.getElementById('droplabel').innerHTML ='Drop files to attach';
                           singleError = true;
                            
                        }
                         
                    }
                    
                },
               
               
                
                onReaderLoadEnd: function(event)
                {
                  
                    if(event.target.result.length < 5859300)
                    {
                      collectDataBase64( event.target.result, fName[count]);
                      count++;
                    }
                    else
                    {
                       alert('File name '+fName[count]+' is too large for Drag and drop.Please use Attach File button to upload the file.');
                       document.getElementById('droplabel').innerHTML ='Drop files to attach';
                        
                        
                    }
                     
                }
            };
            
            // ## Adding drag and drop event listeners
            dropbox.addEventListener('dragenter', dropListener, false);
            dropbox.addEventListener('dragexit', dropListener, false);
            dropbox.addEventListener('dragover', dropListener, false);
            dropbox.addEventListener('drop', dropListener, false);
        
        
    </script>
    </apex:form>
</apex:component>