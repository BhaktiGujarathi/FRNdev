<!--
    This component contains Offer GRID
    Component is dependent on a static resource - SLDS213
    Following stylesheet must be included in the containing page
    <apex:stylesheet value="{!URLFOR($Resource.SLDS213, 'assets/styles/salesforce-lightning-design-system-vf.min.css')}"/>
-->
<apex:component controller="GRIDOffersController" allowDML="true" access="global">
    <style>
        .buttons {
            text-align: center;
        }

        #offerButtons {
            padding: 8px 20px;
            padding-bottom: 10px;
        }

        [title~=offers] .btn{
            font-size: 12px!important;
            /*line-height: 1.875rem!important;*/
            height: 29px;
            text-decoration: none!important;
            color: #fff!important;
            transition: color 50ms linear,background-color 50ms linear;
            background: #0070d2!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            vertical-align: middle!important;
            padding: 0px 10px!important;
            font-weight: 500!important;
            border-radius: 0.25rem!important;
            margin:0 4px!important;
            border-color:#d8dde6!important;
        }

        [title~=offers] .offersOtherBtn {
            background: #4bca81 !important;
        }

        [title~=offers] .btnDisabled {
            font-size: 12px!important;
            height: 29px;
            text-decoration: none!important;
            color: #fff!important;
            transition: color 50ms linear,background-color 50ms linear;
            background: grey !important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            vertical-align: middle!important;
            padding: 0px 10px!important;
            font-weight: 500!important;
            border-radius: 0.25rem!important;
            margin:0 4px!important;
            border-color:#d8dde6!important;
        }

        [title~=offers] .btnNextPreviPage {
            left: 115px;
            position: relative;
            height: 25px;
            /*line-height: initial!important;*/
            font-size: 12px!important;
            color: #0070d2!important;
            background: #fff!important;
        }

        [title~=offers] .btnNextPreviPage:hover{
            background-color: #f4f6f9!important;
        }

        [title~=offers] input[type="email"],
        [title~=offers] input[type="number"],
        [title~=offers] input[type="password"],
        [title~=offers] input[type="tel"],
        [title~=offers] input[type="url"],
        [title~=offers] input[type="text"] {
            background-color: #fff!important;
            color: #16325c!important;
            border: 1px solid #d8dde6!important;
            border-radius: 4px!important;
            transition: border .1s linear,background-color .1s linear!important;
            height:28px!important;
            padding-left: 8px!important;
            padding-right: 8px!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            font-size: 12px;
        }

        [title~=offers] select{
            background-color: #fff!important;
            color: #16325c!important;
            border: 1px solid #d8dde6!important;
            border-radius: 4px!important;
            transition: border .1s linear,background-color .1s linear!important;
            height:28px!important;
            padding-left: 8px!important;
            padding-right: 8px!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            font-size: 12px;
        }

        [title~=offers] a {
            font-family:'Salesforce Sans', Arial, sans-serif!important;
        }

        [title~=offers] input[type="email"]:focus,
        [title~=offers] input[type="number"]:focus,
        [title~=offers] input[type="password"]:focus,
        [title~=offers] input[type="tel"]:focus,
        [title~=offers] input[type="url"]:focus,
        [title~=offers] input[type="text"]:focus,
        [title~=offers] select:focus{
            outline: 0!important;
            border-color: #1589ee!important;
            background-color: #fff!important;
            box-shadow: 0 0 3px #0070D2!important;
        }

        [title~=offers] .dateOnlyInput input {
            width: 7em !important;
        }

        [title~=offers] textarea {
            background-color: #fff!important;
            color: #16325c!important;
            border: 1px solid #d8dde6!important;
            border-radius: 4px!important;
            width: 100px;
            transition: border .1s linear,background-color .1s linear!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            padding-left: 8px!important;
            padding-right: 8px!important;
            padding-top:5px!important;
        }

        [title~=offers] .bPageBlock {
            background:#f4f6f9!important;
            padding:5px!important;
            border-radius: .25rem!important;
        }

        [title~=offers] .bPageBlock{
            background : #fff!important;
        }

        [title~=offers] .apexp .bPageBlock.apexDefaultPageBlock .pbBody {
            margin-top: -3px!important;
        }

        [title~=offers] .headerRow {
            color: #54698d!important;
            font-weight: 300!important;
            letter-spacing: .0625rem;
            line-height: 1.25;
            font-size: 12px;
            background-color: #fff!important;
        }

        [title~=offers] .headerRow [title~=offers] th {
            font-size: .75rem;
            line-height: 1.25;
            color: #fff!important;
            letter-spacing: .0625rem;
            background-color: #fff!important;
        }

        [title~=offers] body [title~=offers] .bPageBlock{
            background-color: #fff!important;
        }

        [title~=offers] .pbBody [title~=offers] a{
            font-family:'Salesforce Sans', Arial, sans-serif!important;
        }

        [title~=offers] body 
        [title~=offers] .pbBody 
        [title~=offers] table.list
        [title~=offers] tr.headerRow 
        [title~=offers] th {
            border: none!important;
            border-bottom: 1px solid #d8dde6!important;
            padding: 8px 2px 8px 5px!important;
            border-color:#d8dde6!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            color: #54698d!important;
        }

        [title~=offers] .list 
        [title~=offers] td{
            padding: 10px 2px 10px 5px!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
        }

        [title~=offers] body 
        [title~=offers] .pbBody
        [title~=offers] table.list 
        [title~=offers] tr.headerRow [title~=offers] td,
        [title~=offers] body 
        [title~=offers] .pbBody
        [title~=offers] table.list 
        [title~=offers] tr.headerRow 
        [title~=offers] th {
            background: #fff!important;
            border:none!important;
            border-bottom: 1px solid #ddd!important;
        }

        [title~=offers] .pagination-btn-grp button {
            padding-left: 10px!important;
            padding-right: 10px!important;
            line-height: 2em!important;
        }

        [title~=offers] .pagination-btn-grp-wrapper {
            text-align: center;
            width: 200px;
            margin: 0 auto;
            margin-top: -20px;
        }

        #offersTableInner .boolean-field {
            text-align: center !important;
        }

        #offersTableInner .reference-field {
            padding-right: 20px !important;
        }

        .cmb .slds-table td, .cmb .slds-table th {
            position: static !important;
        }

        .dateFormat a {
            color: black !important;
            text-decoration: underline !important;
        }

        .hidden {
            display: none;
        }
        
        .insideSpan span span{
            /*float:left;*/
            display:inline-block;
        }

        [title~=offers] tfoot {
            border-top: 1px solid gainsboro;
        }
    </style>

    <apex:attribute name="isEditAll" description="This is decides the Editall of records on component."
                    type="Boolean" assignTo="{!offrEditAllFlag}"/>
    <apex:includeScript value="/support/console/26.0/integration.js"/>
    <apex:includeScript value="/soap/ajax/29.0/connection.js"/>

    <apex:form id="Offersform" styleClass="records"  title="offers">
        <apex:outputLabel rendered="{!offerIsRefrenceField}">
            Please remove '{!offerRefrenceFieldLabel}'
            field from the 'GRIDOfferFieldSet' field set, as referenced fields are not allowed.
        </apex:outputLabel>

        <apex:actionStatus id="loadingPanel" layout="block">
            <apex:facet name="start">
                <div class="cmb">
                    <div class="slds-spinner_container">
                        <div role="status" class="slds-spinner slds-spinner--medium slds-spinner--brand">
                            <span class="slds-assistive-text">Loading</span>
                            <div class="slds-spinner__dot-a"></div>
                            <div class="slds-spinner__dot-b"></div>
                        </div>
                    </div>
                </div>
            </apex:facet>
        </apex:actionStatus>

        <apex:outputPanel id="offrtable" title="Offer" rendered="{!NOT(offerIsRefrenceField)}">
            <script type="text/javascript">

                t$ = jQuery.noConflict();
                t$(document).ready(function()
                {
                    t$(".disBtn").prop('disabled', true);
                    t$("a").attr("onmouseover","");
                    t$("[id*='offerTab_lbl']").text( 'Offers'+' ({!offrRecordCount})');
                    // Added following two lines for new grid home page
                    var tabTitle = t$("[data-tabname='offers']");
                    tabTitle.text('Offers'+' ({!offrRecordCount})');
                    t$('#offersTableInner tr').hover(
                    function() {
                        t$(this).addClass('hoverhighlight');
                    }, function() {
                        t$(this).removeClass('hoverhighlight');
                    });
                    initCallOfferTab();
                    setEventListenersOffer();
                });

                function rerenderHandlerOffer() {
                    if(typeof rerenderHandler == "function") {
                        rerenderHandler('offers');
                    }
                    setEventListenersOffer();
                }
            </script>
            <apex:pageBlock mode="inlineEdit" >
                <div class="buttons" id="offerButtons">
                    <apex:outputpanel rendered="{!$ObjectType.Offer__c.createable}">
                        <input type="button"
                                onclick="runNewOffer()" 
                                class="{!if(offerisDisable,'btnDisabled disBtn','btn')}"
                                value="New"
                                status="loadingPanel"/>
                    </apex:outputPanel>
                    <apex:outputpanel rendered="{!AND($ObjectType.Offer__c.updateable, NOT(offrEditAllFlag))}">
                        <apex:CommandButton action="{!editAllOffers}"
                                            value="Edit All"
                                            disabled="{!offerisDisable}"
                                            rerender="offrtable"
                                            oncomplete="rerenderHandlerOffer();"
                                            status="loadingPanel"
                                            immediate="true"/>
                    </apex:outputPanel>
                    <apex:outputpanel rendered="{!OR($ObjectType.Offer__c.updateable,$ObjectType.Offer__c.createable)}">
                        <input type="button"
                                onclick="runSaveOffers()" 
                                class="{!if(offerisDisable,'btnDisabled disBtn','btn')}"
                                value="Save" 
                                status="loadingPanel" />
                    </apex:outputpanel>
                    <apex:CommandButton action="{!refreshOffers}"
                                        value="Refresh"
                                        disabled="{!offerisDisable}"
                                        rerender="offrtable"
                                        oncomplete="rerenderHandlerOffer();"
                                        status="loadingPanel"
                                        immediate="true" />
                    <apex:CommandButton action="{!refreshOffers}"
                                        value="Cancel"
                                        disabled="{!offerisDisable}"
                                        rerender="offrtable"
                                        oncomplete="rerenderHandlerOffer();"
                                        status="loadingPanel"
                                        immediate="true" />
                    <apex:CommandButton action="{!refreshOffers}"
                                        onclick="confirmSendOffers();"
                                        value="Email Offers"
                                        disabled="{!offrRecordCount < 1 || offerisDisable}"
                                        rerender=""
                                        oncomplete="rerenderHandlerOffer();"
                                        styleClass="offersOtherBtn"
                                        immediate="true"/>
                    <apex:CommandButton action="{!refreshOffers}"
                                        onclick="dewPage()"
                                        value="Deal Entry Wizard"
                                        disabled="{!offerisDisable}"
                                        rerender="offrtable"
                                        oncomplete="rerenderHandlerOffer();"
                                        styleClass="offersOtherBtn"
                                        status="loadingPanel"
                                        immediate="true" />
                </div>
                <apex:pageMessages id="offrgMsgId" escape="false"/>
                <div class="cmb">
                    <div class="slds-scrollable--x" style="position: relative;">
                        <table class="contentTable slds-table slds-table--bordered slds-table--striped"
                                border="0" 
                                cellpadding="0" 
                                cellspacing="0" 
                                id="offersTableInner">
                            <tbody>
                                <tr class="headerRow">
                                    <th>#</th>
                                    <th>Action</th>
                                    <th>Submission</th>
                                    <apex:repeat value="{!offrFieldsetList}" var="offrField">
                                        <th>
                                            <div>
                                                <apex:outputLabel value="{!offrField.label}"/>
                                                <apex:OutputPanel rendered="{!AND(fieldPathResult != offrField.fieldPath, 
                                                                            displaySortingArrow ,
                                                                            offrField.type != 'multipicklist', 
                                                                            offrField.type != 'phone')}">
                                                    <img src="{!IF(offrSortExprFieldApi==offrField.fieldPath,
                                                            IF(offrSortDirection=='ASC',urlfor($Resource.GRIDResource
                                                            ,'GRIDResource/Images/Sort_Asc.png'),
                                                            urlfor($Resource.GRIDResource, 
                                                            'GRIDResource/Images/Sort_Desc.png')),
                                                            urlfor($Resource.GRIDResource
                                                            , 'GRIDResource/Images/Sort_Both.png'))}" 
                                                        style="height:11px;" 
                                                        name ="{!offrField.fieldPath}" 
                                                        class="sorting" 
                                                        onclick="sortCallOffers('{!offrField.type}');" />
                                                </apex:OutputPanel>
                                            </div>
                                        </th>
                                    </apex:repeat>
                                </tr>
                                <apex:repeat value="{!offrWrapperLst}" var="offrWraper">
                                    <tr class="dataRow">
                                        <td>
                                            <apex:outputtext value="{!offrWraper.offrIndex + 1}"/>
                                        </td>
                                        <td class="width10TdSub">
                                            <apex:outputLink value="#"
                                                             target="_blank"
                                                             onclick="openOfferPage('{!offrWraper.offr.Id}');"
                                                             rendered="{!NOT(ISBLANK(offrWraper.offr.Id))}">
                                                View
                                            </apex:outputLink>
                                            <apex:outputLabel value=" | " 
                                                            rendered="{!AND(NOT(ISBLANK(offrWraper.offr.Id)),
                                                                    $ObjectType.Offer__c.deletable)}"/>
                                            <apex:commandLink action="{!deleteOffer}" 
                                                              value="Del" 
                                                              rerender="offrtable" 
                                                              rendered="{!AND(NOT(ISBLANK(offrWraper.offr.Id)),
                                                                        $ObjectType.Offer__c.deletable)}" 
                                                              status="loadingPanel">
                                                <apex:param name="offrIndexToRemove"
                                                            value="{!offrWraper.offrIndex}"
                                                            assignTo="{!offrIndexToRemove}"></apex:param>
                                            </apex:commandLink>
                                            <apex:commandLink action="{!deleteOffer}" 
                                                          value="Remove" 
                                                          rerender="offrtable" 
                                                          rendered="{!(ISBLANK(offrWraper.offr.Id))}"
                                                          styleClass="removeRow"
                                                          status="loadingPanel" 
                                                          immediate="true">
                                                <apex:param name="offrIndexToRemove"
                                                            value="{!offrWraper.offrIndex}"
                                                            assignTo="{!offrIndexToRemove}"></apex:param>
                                            </apex:commandLink>
                                        </td>
                                        <!-- Picklist for FO-1387 -->
                                        <td class="width10TdSub insideSpan">
                                            <apex:selectList size="1" 
                                                            value="{!offrWraper.offrSubmissionValue}" 
                                                            rendered="{!OR(IF(offrWraper.offrEdit = true, true, false),
                                                                ISBLANK(offrWraper.offr.Id))}">
                                                <apex:selectoptions value="{!offrSubmissionOptions}"/>
                                            </apex:selectList>
                                            <apex:outputPanel rendered="{!IF(offrWraper.offrEdit = false, true, false)}" >
                                                <apex:outputfield value="{!offrWraper.offr.Submission__r.Funder__c}"
                                                    rendered="{!AND(IF(offrWraper.offrEdit = false, true, false),
                                                    NOT(ISBLANK(offrWraper.offr.Id)))}">
                                                </apex:outputfield>
                                                <apex:variable var="foo" value="foo" rendered="{!AND(IF(offrWraper.offrEdit = false, true, false),
                                                    NOT(ISBLANK(offrWraper.offr.Id)))}">
                                                -
                                                </apex:variable>
                                                <apex:outputfield value="{!offrWraper.offr.Submission__r.Program__c}"  
                                                    rendered="{!AND(IF(offrWraper.offrEdit = false, true, false),
                                                        NOT(ISBLANK(offrWraper.offr.Id)))}">
                                                </apex:outputfield>
                                            </apex:outputPanel>
                                        </td>

                                        <!--End of FO-1387 -->
                                        <td style="display: none">
                                            <apex:inputField value="{!offrWraper.offr['Opportunity__c']}" />
                                        </td>
                                        <apex:repeat value="{!offrFieldsetList}" var="offrfield">
                                            <td class="width10TdSub {!offrfield.type}-field">
                                                <apex:outputField value="{!offrWraper.offr[offrfield]}" 
                                                                  rendered="{!AND(IF(offrWraper.offrEdit = false, true, false),
                                                                            NOT(ISBLANK(offrWraper.offr.Id)))}" />
                                                <apex:inputField value="{!offrWraper.offr[offrfield]}" 
                                                                 rendered="{!OR(IF(offrWraper.offrEdit = true, true, false),
                                                                            ISBLANK(offrWraper.offr.Id))}"/>
                                            </td>
                                        </apex:repeat>
                                    </tr>
                                </apex:repeat>
                            </tbody>

                            <tfoot>
                                <tr class = "headerRow">
                                    <td><b>Max</b>
                                    <br/>
                                    <b>Min</b></td>
                                    <td></td>
                                    <td></td>
                                    <apex:repeat value="{!offrFieldsetList}" var="offrfield">
                                        <td>
                                            <b>
                                                <apex:outputText value="{!currencySymbol}{0, number, ###,###,###,##0.00}" 
                                                                 rendered="{!AND(offrFieldToMaxMap[offrfield.fieldPath] != -999.999,
                                                                        offrfield.type=='currency')}" >
                                                    <apex:param value="{!offrFieldToMaxMap[offrfield.fieldPath]}" />
                                                </apex:outputText>
                                            </b>
    
                                            <b>
                                               <apex:outputText value="{0, number, ###,###,###,##0.00}" 
                                                                 rendered="{!AND(offrFieldToMaxMap[offrfield.fieldPath] != -999.999,
                                                                       offrfield.type!= 'currency')}" >
                                                   <apex:param value="{!offrFieldToMaxMap[offrfield.fieldPath]}" />
                                               </apex:outputText>
                                            </b>
                                            <br/>
                                            <b>
                                                <apex:outputText value="{!currencySymbol}{0, number, ###,###,###,##0.00}" 
                                                                 rendered="{!AND(offrFieldToMinMap[offrfield.fieldPath] != -999.999,
                                                                           offrfield.type== 'currency')}" >
                                                   <apex:param value="{!offrFieldToMinMap[offrfield.fieldPath]}" />
                                                </apex:outputText>
                                            </b>
    
                                            <b>
                                                <apex:outputText value="{0, number, ###,###,###,##0.00}" 
                                                                 rendered="{!AND(offrFieldToMinMap[offrfield.fieldPath] != -999.999,
                                                                           offrfield.type!= 'currency')}" >
                                                   <apex:param value="{!offrFieldToMinMap[offrfield.fieldPath]}" />
                                                </apex:outputText>
                                            </b>
                                        </td>
                                    </apex:repeat>
                                </tr>
                            </tfoot>
                        </table>
                    </div>

                    <div style="margin-top: 10px;">
                        {!IF((offrOffsetsize + 1) > offrRecordCount, 
                        IF(offrRecordCount - offrBlockSize <= 0, 0, offrRecordCount - offrBlockSize),
                        offrOffsetsize + 1)} - {!offrWrapperLst.size + offrOffsetsize} of {!offrRecordCount}
                    </div>

                    <div class="pagination-btn-grp-wrapper">
                        <div class="slds-button-group pagination-btn-grp" role="group">
                            <button class="slds-button slds-button--neutral first"
                                    onclick="beginningOffers(); return false;">&lt;&lt;</button>
                            <button class="slds-button slds-button--neutral previous"
                                    onclick="previousOffers(); return false;">&lt;</button>
                            <button class="slds-button slds-button--neutral next"
                                    onclick="nextOffers(); return false;">&gt;</button>
                            <button class="slds-button slds-button--neutral last"
                                    onclick="endOffers(); return false;">&gt;&gt;</button>
                        </div>
                        <script>
                            t$ = jQuery.noConflict();
                            if("{!offrOffsetsize != 0}" == 'false') {
                                t$('[title~=offers] .pagination-btn-grp .first').attr('disabled', 'disabled');
                                t$('[title~=offers] .pagination-btn-grp .previous').attr('disabled', 'disabled');
                            } else {
                                t$('[title~=offers] .pagination-btn-grp .first').removeAttr('disabled');
                                t$('[title~=offers] .pagination-btn-grp .previous').removeAttr('disabled');
                            }
                            if("{!offrWrapperLst.size + offrOffsetsize < offrRecordCount}" == 'false') {
                                t$('[title~=offers] .pagination-btn-grp .next').attr('disabled', 'disabled');
                                t$('[title~=offers] .pagination-btn-grp .last').attr('disabled', 'disabled');
                            } else {
                                t$('[title~=offers] .pagination-btn-grp .next').removeAttr('disabled');
                                t$('[title~=offers] .pagination-btn-grp .last').removeAttr('disabled');
                            }
                        </script>
                    </div>
                </div>

                <apex:actionFunction name="beginningOffers" action="{!beginningOffers}"
                        rerender="offrtable" oncomplete="rerenderHandlerOffer();"
                        status="loadingPanel"/>
                <apex:actionFunction name="previousOffers" action="{!previousOffers}"
                        rerender="offrtable" oncomplete="rerenderHandlerOffer();"
                        status="loadingPanel"/>
                <apex:actionFunction name="nextOffers" action="{!nextOffers}"
                        rerender="offrtable" oncomplete="rerenderHandlerOffer();"
                        status="loadingPanel"/>
                <apex:actionFunction name="endOffers" action="{!endOffers}"
                        rerender="offrtable" oncomplete="rerenderHandlerOffer();"
                        status="loadingPanel"/>
            </apex:pageBlock>

            <apex:inputHidden value="{!offrSortExpression}" id="offrSortHiddencriterian"/>
            <apex:inputHidden value="{!offrSortDirection}" id="offrSortHiddenOrder"/>
            <apex:inputHidden value="{!offrSortExprFieldApi}" id="offrSortFieldApi"/>
        </apex:outputPanel>

        <apex:actionFunction action="{!newOffer}" name="newOffer" rerender="offrtable"
            oncomplete="rerenderHandlerOffer();" status="loadingPanel"/>
        <apex:actionFunction action="{!saveOffers}" name="saveOffers" rerender="offrtable"
            oncomplete="rerenderHandlerOffer();" status="loadingPanel"/>
        <apex:actionFunction action="{!sortOffers}" name="sortAllOffers" rerender="offrtable"
            oncomplete="rerenderHandlerOffer();" status="loadingPanel" >
            <apex:param name="offrTypeParam" value="" />
        </apex:actionFunction>
    </apex:form>

    <!-- Modal box for confirmation -->
    <div class="cmb">
        <div role="dialog" id="confirmmodal" tabindex="-1" aria-labelledby="header43"
            class="slds-modal slds-fade-in-open hidden">
            <div class="slds-modal__container">
                <div class="slds-modal__header">
                    <button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close">
                        <span class="slds-assistive-text">Close</span>
                    </button>
                    <h2 id="header43" class="slds-text-heading--medium">Confirmation</h2>
                </div>
                <div class="slds-modal__content slds-p-around--medium">
                    <p id="confirmmessage"></p>
                </div>
                <div class="slds-modal__footer">
                    <button class="slds-button slds-button--neutral" onclick="closeConfirmModal();"
                        id="cancelSendOffersbtn">
                        Cancel
                    </button>
                    <button class="slds-button slds-button--brand" id="confirmSendOffersbtn">
                        Send
                    </button>
                </div>
            </div>
        </div>
        <div class="slds-backdrop slds-backdrop--open hidden backdrop" id="backdropConfirmOffer"></div>
    </div>

    <!-- Notification toast for success -->
    <div class="cmb">
        <div role="alertdialog" tabindex="-1" aria-labelledby="prompt-heading-id"
            aria-describedby="prompt-message-wrapper" id="successModal"
            class="slds-modal slds-fade-in-open slds-modal--prompt hidden">
            <div class="slds-modal__container">
                <div class="slds-modal__header slds-theme--success slds-theme--alert-texture">
                    <button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close">
                    </button>
                    <h2 class="slds-text-heading--medium" id="prompt-heading-id">Email Sent</h2>
                </div>
                <div class="slds-modal__content slds-p-around--medium">
                    LIST OF RECIPIENTS: <br/>
                    <p id="mailreceipientlist"></p>
                </div>
                <div class="slds-modal__footer slds-theme--default">
                    <button class="slds-button slds-button--neutral backdrop" onclick="closeSuccessModal();">
                        Ok
                    </button>
                </div>
            </div>
        </div>
        <div class="slds-backdrop slds-backdrop--open hidden" id="backdropSuccessOffer"></div>
    </div>

    <!-- Notification toast for error -->
    <div class="cmb">
        <div class="slds-notify_container hidden" id="errorModal">
            <div class="slds-notify slds-notify--toast slds-theme--error" role="alert">
                <span class="slds-assistive-text">Error</span>
                <button class="slds-button slds-notify__close slds-button--icon-inverse"
                    title="Close" onclick="closeerrorModal();">

                    <span>X</span>
                </button>
                <div class="slds-notify__content slds-grid">
                    <!--<svg class="slds-icon slds-icon--small slds-m-right--small slds-col slds-no-flex" aria-hidden="true">
                        <use xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#warning"></use>
                    </svg> -->
                    <div class="slds-col slds-align-middle">
                        <h2 class="slds-text-heading--small" id="sldsErrorMessage">
                        </h2>
                    </div>
                </div>
            </div>
        </div>
        <div class="slds-backdrop slds-backdrop--open hidden backdrop" id="backdropErrOffer"></div>
    </div>

    <script>
        var mcaNamePrefixValueOffer = (('{!$Label.MCANamePrefix}' == 'McaApp__')? '{!$Label.MCANamePrefix}': '');
        var isInConsoleOffer = false;
        var tabIdOffer;

        function setEventListenersOffer() {
            t$("[id$='offrtable'] .width10TdSub a").click(function() {
                var elementId = event.target.id;
                if(elementId.indexOf('lookup') == 0) {
                    if(isInConsoleOffer) {
                        openConsoleTabOfferNewTab(event.target.href);
                    }
                    else {
                        window.open(event.target.href);
                    }
                    event.preventDefault();
                }
            });

            t$('[id$=offrtable] .slds-scrollable--x').on('scroll', function() {
                t$(':focus').blur();
                t$('.datePicker').css('display', 'none');
            });

            t$('#confirmSendOffersbtn').click(function(event) {
                t$('#confirmmodal').addClass('hidden');
                sendOffers();
            });

            t$('#cancelSendOffersbtn').click(function(event) {
                t$('#confirmmodal').addClass('hidden');
            });
        }

        function runNewOffer() {
            setTimeout(function() {
                newOffer();
            }, 100);
        }

        function runSaveOffers() {
            setTimeout(function() {
                saveOffers();
            }, 100);
        }

        function initCallOfferTab() {
            setIsConsoleOfferTab();
            getFocusedPrimaryTabIdOffer();
        }

        function setIsConsoleOfferTab() {
            var inConsole = false;
            var url = document.location.href;
            inConsole = url.indexOf('isConsole=1') > -1;
            if(inConsole) {
                isInConsoleOffer = inConsole;
            } else {
                isInConsoleOffer = sforce.console.isInConsole();
            }
        }

        function getFocusedPrimaryTabIdOffer() {
            sforce.console.getFocusedPrimaryTabId(showTabIdOffer);
        }

        var showTabIdOffer = function showTabIdOffer(result) {
            //Display the tab ID
            tabIdOffer = result.id;
        };

        function openConsoleTabOffer(url, tabLabel) {
            sforce.console.openPrimaryTab(tabIdOffer, url, true, tabLabel, function(r){});
            sforce.console.closeTab(tabIdOffer);
        }

        function openConsoleTabOfferNewTab(url, tabLabel) {
            sforce.console.openPrimaryTab(null, url, true, tabLabel, function(r){});
        }

        function openOfferPage(recordIdToOpen) {
            event.preventDefault();
            if(isInConsoleOffer) {
                openConsoleTabOfferNewTab('/'+recordIdToOpen, 'Offer');
            } else {
                window.open('/'+recordIdToOpen);
            }
        }

        function sortCallOffers(offrFieldDataType) {
            /**
             * event.target will have the DOM structure on which the event is fired.
             * So here salesforce automically will
             * pick up native html id of the selector
             */
            var offrElement= event.target;
            var newoffrSortCol = t$(offrElement).attr("Name"); // new sort field
            t$("input[id$='offrSortFieldApi']").val(newoffrSortCol);
            var oldoffrSortCol = t$("input[id$='offrSortHiddencriterian']").val();
            var indexOffr;
            var offrTempSortExpr;
            if(newoffrSortCol.endsWith('__c')) {
                indexOffr = newoffrSortCol.indexOf('__');
            } else if(newoffrSortCol.endsWith('Id')) {
                indexOffr = newoffrSortCol.indexOf('Id');
            }

            if(indexOffr != null) {
                offrTempSortExpr = newoffrSortCol.substring(0, indexOffr);
            } else {
                offrTempSortExpr = newoffrSortCol;
            }

            //if(String(newoffrSortCol) == String(oldoffrSortCol))
            if(oldoffrSortCol.indexOf(offrTempSortExpr) != -1) {
                if(String(t$("input[id$='offrSortHiddenOrder']").val()) == "ASC") {
                    t$("input[id$='offrSortHiddenOrder']").val("DESC");
                    t$(offrElement).removeClass('SortAsc').addClass('SortDesc');
                } else {
                    t$("input[id$='offrSortHiddenOrder']").val("ASC");
                    t$(offrElement).removeClass('SortDesc').addClass('SortAsc');
                }
                t$("input[id$='offrSortHiddencriterian']").val(newoffrSortCol);
                sortAllOffers(offrFieldDataType);
            } else {
                t$("input[id$='offrSortHiddencriterian']").val(newoffrSortCol);
                t$("input[id$='offrSortHiddenOrder']").val("ASC");
                t$(offrElement).removeClass('sorting').addClass('SortAsc');
                sortAllOffers(offrFieldDataType);
            }
        }

        function closeConfirmModal() {
            t$("#confirmmodal").addClass("hidden");
            t$(".backdrop").addClass("hidden");
        }

        function closeSuccessModal() {
            t$("#successModal").addClass("hidden");
            t$("#backdropSuccessOffer").addClass("hidden");
            t$("#backdropConfirmOffer").addClass("hidden");
            t$("#backdropErrOffer").addClass("hidden");
            t$(".backdrop").addClass("hidden");
        }

        function closeerrorModal() {
            t$("#errorModal").addClass("hidden");
            t$(".backdrop").addClass("hidden");
        }

        function confirmSendOffers() {
            var errorMsgOffers = '{!errorMsgOffers}';
            var isConfirmMsgOffers = '{!isConfirmMsgOffers}';
            var configureFromAddress;
            configureFromAddress  = '{!configureSettingFromAddress}';
            
            if(configureFromAddress && !errorMsgOffers) {
                t$("#confirmmessage").html(errorMsgOffers);
                t$("#confirmmodal").removeClass("hidden");
                t$("#backdropConfirmOffer").removeClass("hidden");
            } else if(errorMsgOffers) {
                
                if(isConfirmMsgOffers == 'false') {
                    t$("#sldsErrorMessage").html(errorMsgOffers);
                    t$("#errorModal").removeClass("hidden");
                    t$("#backdropErrOffer").removeClass("hidden");
                } else if(isConfirmMsgOffers == 'true'){
                    t$("#confirmmodal").removeClass("hidden");
                    t$("#backdropConfirmOffer").removeClass("hidden");
                    t$("#confirmmessage").html(errorMsgOffers);
                }
            } else {
                if(isConfirmMsgOffers == 'false' || errorMsgOffers != null  || errorMsgOffers != ''
                || fromAddressErrCheck == '') {
                    sendOffers();
                }
            }
        }

        function sendOffers() {
            /*var url = '{!sendOfferButtonURL}';*/
            sforce.connection.sessionId = '{!$Api.Session_ID}';
            var result = sforce.connection.query("Select Name, Id, (Select Id, "
            +mcaNamePrefixValueOffer+"Send__c, "+mcaNamePrefixValueOffer
            +"Status__c From "+mcaNamePrefixValueOffer+"Offers__r where "+mcaNamePrefixValueOffer
            +"Send__c = true) From Opportunity o where Id ='{!offrOppId}'");
            var recordid = '{!$CurrentPage.parameters.id}';
            var offers = result.getArray("records");
            if(offers.length > 0) {
                for(var i=0; i<offers.length; i++) {
                    if(offers[i].get(mcaNamePrefixValueOffer+'Offers__r') != null) {
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.GRIDOffersController.getSenderReceipient}',
                            recordid,
                            function(result, event){
                                var data = t$('<div/>').html(result).text();
                                if(result.indexOf('exception') > -1) {
                                    t$("#sldsErrorMessage").html(result);
                                    t$("#errorModal").removeClass("hidden");
                                    t$("#backdropErrOffer").removeClass("hidden");
                                    /*alert('Email sent...');*/
                                } else {
                                    var mailReceipientList = JSON.parse(data);
                                    t$("#mailreceipientlist").html(getEmailReceipientsAsUL(mailReceipientList));
                                    t$("#successModal").removeClass("hidden");
                                    t$("#backdropSuccessOffer").removeClass("hidden");
                                    /*alert(result);*/
                                }
                            });
                    } else {
                        alert('{!$Label.OfferWizard_ErrorMsg}');
                    }
                }
            }
        }

        function getEmailReceipientsAsUL(mailReceipientList) {
            var stringlabel = '';
            //var receipientList = t$('ul');
            for(var i=0; i < mailReceipientList.length; i++) {
                //t$('<li/>').append(mailReceipientList[i]).appendTo(receipientList);
                stringlabel += mailReceipientList[i] + '<br/> ';
            }
            return stringlabel;
        }

        function dewPage() {
            var dewURL = '{!dewButtonURL}';
            sforce.connection.sessionId = '{!$Api.Session_ID}';
            var result = sforce.connection.query(
            "Select Name, Id from "+mcaNamePrefixValueOffer+"Submission__c where "
            +mcaNamePrefixValueOffer+"Opportunity__c ='{!offrOppId}'");
            var submission = result.getArray("records");
            if('{!offrAccountId}' == '') {
                alert('Please associate Opportunity with Account to create Contract');
            } else if(submission.length == 0) {
               alert(
                'No Submissions or Offers are present for this Opportunity.'
                +' Please Create Submissions or Offer to enter the Deal Entry Wizard');
            } else {
               if(isInConsoleOffer) {
                    dewURL += '&isConsole=1';
                    openConsoleTabOfferNewTab(dewURL, 'Deal Entry Wizard');
                } else {
                    dewURL += '&isConsole=0';
                    window.open(dewURL, '_parent');
                }
            }
        }
    </script>
</apex:component>