<apex:component controller="GRIDContactRolesController" allowDML="true" access="global">
    <style>
        [title~=ContactRole] .btn{
            font-size: 12px!important;
            /*line-height: 1.875rem!important;*/
            height: 29px;
            text-decoration: none!important;
            color: #fff!important;
            transition: color 50ms linear,background-color 50ms linear;
            background: #0070d2!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            vertical-align: middle!important;
            padding: 0px 10px!important;
            font-weight: 500!important;
            border-radius: 0.25rem!important;
            margin:0 4px!important;
            border-color:#d8dde6!important;
        }

        [title~=ContactRole] .btnNextPreviPage {
            left: 115px;
            position: relative;
            height: 25px;
            /*line-height: initial!important;*/
            font-size: 12px!important;
            color: #0070d2!important;
            background: #fff!important;
        }

        [title~=ContactRole] .btnNextPreviPage:hover{
            background-color: #f4f6f9!important;
        }

        [title~=ContactRole] input[type="email"],
        [title~=ContactRole] input[type="number"],
        [title~=ContactRole] input[type="password"],
        [title~=ContactRole] input[type="tel"],
        [title~=ContactRole] input[type="url"],
        [title~=ContactRole] input[type="text"] {
            background-color: #fff!important;
            color: #16325c!important;
            border: 1px solid #d8dde6!important;
            border-radius: 4px!important;
            transition: border .1s linear,background-color .1s linear!important;
            height:28px!important;
            padding-left: 8px!important;
            padding-right: 8px!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            font-size: 12px;
        }

        [title~=ContactRole] select{
            background-color: #fff!important;
            color: #16325c!important;
            border: 1px solid #d8dde6!important;
            border-radius: 4px!important;
            transition: border .1s linear,background-color .1s linear!important;
            height:28px!important;
            padding-left: 8px!important;
            padding-right: 8px!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            font-size: 12px;
        }

        [title~=ContactRole] a {
            font-family:'Salesforce Sans', Arial, sans-serif!important;
        }

        [title~=ContactRole] input[type="email"]:focus,
        [title~=ContactRole] input[type="number"]:focus,
        [title~=ContactRole] input[type="password"]:focus,
        [title~=ContactRole] input[type="tel"]:focus,
        [title~=ContactRole] input[type="url"]:focus,
        [title~=ContactRole] input[type="text"]:focus,
        [title~=ContactRole] select:focus{
            outline: 0!important;
            border-color: #1589ee!important;
            background-color: #fff!important;
            box-shadow: 0 0 3px #0070D2!important;
        }

        [title~=ContactRole] .dateOnlyInput input {
            width: 7em !important;
        }

        [title~=ContactRole] textarea{
            background-color: #fff!important;
            color: #16325c!important;
            border: 1px solid #d8dde6!important;
            border-radius: 4px!important;
            width: 100px;
            transition: border .1s linear,background-color .1s linear!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            padding-left: 8px!important;
            padding-right: 8px!important;
            padding-top:5px!important;
        }

        [title~=ContactRole] .bPageBlock {
            background:#f4f6f9!important;
            padding:5px!important;
            border-radius: .25rem!important;
        }

        [title~=ContactRole] .bPageBlock{
            background : #fff!important;
        }

        [title~=ContactRole] .headerRow {
            color: #54698d!important;
            /*text-transform: uppercase;*/
            font-weight: 300!important;
            letter-spacing: .0625rem;
            /*font-family:'Salesforce Sans', Arial, sans-serif!important;*/
            line-height: 1.25;
            font-size: 12px;
            background-color: #fff!important;
        }

       [title~=ContactRole] .headerRow [title~=ContactRole] th {
            font-size: .75rem;
            line-height: 1.25;
            /*color: #54698d!important;
            text-transform: uppercase;*/
            color: #fff!important;
            letter-spacing: .0625rem;
            background-color: #fff!important;
        }

        [title~=ContactRole] body [title~=ContactRole] .bPageBlock{
            background-color: #fff!important;
        }

        [title~=ContactRole] .pbBody [title~=ContactRole] a{
            font-family:'Salesforce Sans', Arial, sans-serif!important;
        }

        [title~=ContactRole] body [title~=ContactRole] .pbBody [title~=ContactRole] table.list
        [title~=ContactRole] tr.headerRow [title~=ContactRole] th {
            border: none!important;
            border-bottom: 1px solid #d8dde6!important;
            padding: 8px 2px 8px 5px!important;
            border-color:#d8dde6!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            color: #54698d!important;
        }

        [title~=ContactRole] .list [title~=ContactRole] td{
            padding: 10px 2px 10px 5px!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
        }

        [title~=ContactRole] body [title~=ContactRole] .pbBody
        [title~=ContactRole] table.list [title~=ContactRole] tr.headerRow [title~=ContactRole] td,
        [title~=ContactRole] body [title~=ContactRole] .pbBody
        [title~=ContactRole] table.list [title~=ContactRole] tr.headerRow [title~=ContactRole] th {
            background: #fff!important;
            border:none!important;
            border-bottom: 1px solid #ddd!important;
        }

        .wrapText {
            word-break: break-word;
            white-space: normal !important;
        }

        [title~=ContactRole] .apexp .bPageBlock.apexDefaultPageBlock .pbBody {
                margin-top: -3px!important;
        }

        [title~=ContactRole] .buttons {
            text-align: center;
        }

        [title~=ContactRole] #contactRoleButtons {
            padding: 8px 20px;
            padding-bottom: 10px;
        }

        [title~=ContactRole] .pagination-btn-grp button {
            padding-left: 10px!important;
            padding-right: 10px!important;
            line-height: 2em!important;
        }

        [title~=ContactRole] .pagination-btn-grp-wrapper {
            text-align: center;
            width: 200px;
            margin: 0 auto;
            margin-top: -20px;
        }

        #contactRolesTableInner .boolean-field {
            text-align: center !important;
        }

        #contactRolesTableInner .reference-field {
            padding-right: 20px !important;
        }

        .cmb .slds-table td, .cmb .slds-table th {
            position: static !important;
        }

        .dateFormat a {
            color: black !important;
            text-decoration: underline !important;
        }
    </style>
    <apex:attribute name="isEditAll" description="This is decides the Editall of records on component."
                    type="Boolean" assignTo="{!conRoleEditAllFlag}" access="global" />

    <apex:form id="contactroleform" styleClass="records" title="ContactRole">
        <apex:actionFunction name="Sample" action="getContactRoleFromDB"/>
        <apex:outputPanel id="ContactRoleTable">
            <script type="text/javascript">
                t$ = jQuery.noConflict();
                t$(document).ready(function()
                {
                    t$(".disBtn").prop('disabled', true);
                    t$("a").attr("onmouseover","");
                    t$("[id*='contactroleTab_lbl']").text( 'Contact Roles'+' ({!conRoleRecordCount})');
                    // Added following two lines for new grid home page
                    var tabTitle = t$("[data-tabname='contactRoles']");
                    tabTitle.text('Contact Roles'+' ({!conRoleRecordCount})');
                    t$('#contactRolesTableInner tr').hover(
                    function() {
                       t$(this).addClass('hoverhighlight');
                    }, function() {
                        t$(this).removeClass('hoverhighlight');
                    });
                    initCallContactRole();
                    setEventListenersContactRole();
                });
                //save functionality
                function rerenderHandlerContactRole() {
                    if(typeof rerenderHandler == "function") {
                        rerenderHandler('contactRoles');
                    }
                    setEventListenersContactRole();
                }
            </script>
            <apex:pageBlock mode="inlineEdit">
                <div class="buttons" id="contactRoleButtons">
                    <input type="button"
                           onclick="runNewContactRole()"
                           class="{!if(conRoleIsDisable,'btnDisabled disBtn','btn')}"
                           value="New" status="loadingPanel"/>
                    <apex:CommandButton action="{!editAllContactRoles}"
                                        value="Edit All"
                                        disabled="{!conRoleIsDisable}"
                                        rerender="ContactRoleTable"
                                        oncomplete="rerenderHandlerContactRole();"
                                        status="loadingPanel"
                                        rendered="{!AND($ObjectType.OpportunityContactRole.updateable,
                                                NOT(conRoleEditAllFlag))}"
                                        immediate="true"/>
                    <input type="button"
                           onclick="runSaveContactRoles()"
                           class="{!if(conRoleIsDisable,'btnDisabled disBtn','btn')}"
                           value="Save"
                           status="loadingPanel" />
                    <apex:CommandButton action="{!refreshContactRoles}"
                                        value="Refresh"
                                        disabled="{!conRoleIsDisable}"
                                        rerender="ContactRoleTable"
                                        oncomplete="rerenderHandlerContactRole();"
                                        status="loadingPanel"
                                        immediate="true"/>
                    <apex:CommandButton action="{!refreshContactRoles}"
                                        value="Cancel"
                                        disabled="{!conRoleIsDisable}"
                                        rerender="ContactRoleTable"
                                        oncomplete="rerenderHandlerContactRole();"
                                        status="loadingPanel"
                                        immediate="true"/>
                </div>
                <apex:pageMessages id="ContactRolepgMsgId" escape="false" />
                <div class="cmb">
                    <div class="slds-scrollable--x" style="position: relative;">
                        <table class="contentTable slds-table slds-table--bordered slds-table--striped"
                                border="0" cellpadding="0" cellspacing="0" id="contactRolesTableInner">
                             <tbody>
                                <tr class="headerRow">
                                    <th class="widthRecordSub">#</th>
                                    <th class="widthActionSub">Action</th>
                                    <th class="width10Sub">
                                        <div>
                                            <apex:outputLabel value="Contact Name"/>
                                            <img src="{!IF(conRoleSortExprFieldApi=='ContactId',
                                                        IF(conRoleSortDirection=='ASC',
                                                        urlfor($Resource.GRIDResource,
                                                        'GRIDResource/Images/Sort_Asc.png'),
                                                        urlfor($Resource.GRIDResource,
                                                        'GRIDResource/Images/Sort_Desc.png')),
                                                        urlfor($Resource.GRIDResource,
                                                        'GRIDResource/Images/Sort_Both.png'))}"
                                                    style="height:11px;"
                                                    name ="ContactId"
                                                    class="sorting"
                                                    onclick="sortCallContactRoles('reference');" />
                                        </div>
                                    </th>
                                    <th class="width10Sub">
                                        <div>
                                            <apex:outputLabel value="Primary"/><br/>(Select one)
                                            <img src="{!IF(conRoleSortExprFieldApi=='IsPrimary',
                                                        IF(conRoleSortDirection=='ASC',
                                                        urlfor($Resource.GRIDResource,
                                                        'GRIDResource/Images/Sort_Asc.png'),
                                                        urlfor($Resource.GRIDResource,
                                                        'GRIDResource/Images/Sort_Desc.png')),
                                                        urlfor($Resource.GRIDResource,
                                                        'GRIDResource/Images/Sort_Both.png'))}"
                                                 style="height:11px;"
                                                 name ="IsPrimary"
                                                 class="sorting"
                                                 onclick="sortCallContactRoles('boolean');" />
                                        </div>
                                    </th>
                                    <th class="width10Sub">
                                        <div>
                                            <apex:outputLabel value="Role"/>
                                            <img src="{!IF(conRoleSortExpression=='Role',
                                                        IF(conRoleSortDirection=='ASC',
                                                        urlfor($Resource.GRIDResource,
                                                        'GRIDResource/Images/Sort_Asc.png'),
                                                        urlfor($Resource.GRIDResource,
                                                        'GRIDResource/Images/Sort_Desc.png')),
                                                        urlfor($Resource.GRIDResource ,
                                                        'GRIDResource/Images/Sort_Both.png'))}" 
                                                    style="height:11px;"
                                                    name ="Role"
                                                    class="sorting"
                                                    onclick="sortCallContactRoles('picklist');" />
                                        </div>
                                    </th>
                                    <th class="width10Sub">
                                        <div>
                                            <apex:outputLabel value="Phone"/>
                                        </div>
                                    </th>
                                    <th class="width10Sub">
                                        <div>
                                            <apex:outputLabel value="Mobile"/>
                                        </div>
                                    </th>
                                    <th class="width10Sub">
                                        <div>
                                            <apex:outputLabel value="Email"/>
                                            <img src="{!IF(conRoleSortExprFieldApi=='Contact.Email',
                                                        IF(conRoleSortDirection=='ASC',
                                                        urlfor($Resource.GRIDResource,
                                                        'GRIDResource/Images/Sort_Asc.png'),
                                                        urlfor($Resource.GRIDResource,
                                                        'GRIDResource/Images/Sort_Desc.png')),
                                                        urlfor($Resource.GRIDResource,
                                                        'GRIDResource/Images/Sort_Both.png'))}" 
                                                    style="height:11px;"
                                                    name ="Contact.Email"
                                                    class="sorting"
                                                    onclick="sortCallContactRoles('email');" />
                                        </div>
                                    </th>
                                </tr>
                                <apex:repeat value="{!conRoleWrapperLst}" var="conRoleWrap">
                                    <tr class="dataRow">
                                        <td class="widthRecordTdSub">
                                            <apex:outputtext value="{!conRoleWrap.conRoleIndex + 1}" />
                                        </td>
                                        <td class="widthActionTdSub">
                                            <apex:outputLink value="#"
                                                target="_blank"
                                                onclick="openContactRoleEditPage('{!conRoleWrap.conRole.OpportunityId}');"
                                                rendered="{!NOT(ISBLANK(conRoleWrap.conRole.Id))}">
                                                Edit
                                            </apex:outputLink>
                                            <apex:outputLabel value="| " rendered="{!NOT(ISBLANK(conRoleWrap.conRole.Id))}"/>
                                            <apex:commandLink action="{!deleteContactRole}"
                                                              value="Del"
                                                              rerender="ContactRoleTable"
                                                              rendered="{!NOT(ISBLANK(conRoleWrap.conRole.Id))}"
                                                              status="loadingPanel">
                                                <apex:param name="cardIndexToRemove"
                                                            value="{!conRoleWrap.conRoleIndex}"
                                                            assignTo="{!conRoleIndexToRemove}">
                                                </apex:param>
                                            </apex:commandLink>
                                            <apex:commandLink action="{!deleteContactRole}"
                                                              value="Remove"
                                                              rerender="ContactRoleTable"
                                                              rendered="{!(ISBLANK(conRoleWrap.conRole.Id))}"
                                                              styleClass="removeRow"
                                                              status="loadingPanel"
                                                              immediate="true">
                                                <apex:param name="conRoleIndexToRemove"
                                                            value="{!conRoleWrap.conRoleIndex}"
                                                            assignTo="{!conRoleIndexToRemove}">
                                                </apex:param>
                                            </apex:commandLink>
                                        </td>
                                        <td width="140px" class="width10TdSub reference-field">
                                            <apex:outputField value="{!conRoleWrap.conRole.ContactId}"
                                                              rendered="{!AND(IF(conRoleWrap.conRoleEdit = false, true, false),
                                                                        NOT(ISBLANK(conRoleWrap.conRole.Id)))}"  />
                                            <apex:inputField value="{!conRoleWrap.conRole.ContactId}"
                                                             rendered="{!OR(IF(conRoleWrap.conRoleEdit = true, true, false),
                                                                        ISBLANK(conRoleWrap.conRole.Id))}"
                                                             onchange="contactDetailNew({!conRoleWrap.conRoleIndex});"/>
                                        </td>
                                        <td class="width10TdSub boolean-field">
                                            <apex:outputField value="{!conRoleWrap.conRole.IsPrimary}"
                                                              rendered="{!AND(IF(conRoleWrap.conRoleEdit = false, true, false),
                                                                        NOT(ISBLANK(conRoleWrap.conRole.Id)))}" />
                                            <apex:inputField value="{!conRoleWrap.conRole.IsPrimary}"
                                                             rendered="{!OR(IF(conRoleWrap.conRoleEdit = true, true, false),
                                                                        ISBLANK(conRoleWrap.conRole.Id))}" />
                                        </td>
                                        <td class="width10TdSub">
                                            <apex:outputField value="{!conRoleWrap.conRole.Role}"
                                                              rendered="{!AND(IF(conRoleWrap.conRoleEdit = false, true, false),
                                                                        NOT(ISBLANK(conRoleWrap.conRole.Id)))}" />
                                            <apex:inputField value="{!conRoleWrap.conRole.Role}" 
                                                             rendered="{!OR(IF(conRoleWrap.conRoleEdit = true, true, false),
                                                                        ISBLANK(conRoleWrap.conRole.Id))}" />
                                        </td>
                                        <td class="width10TdSub">
                                            <apex:outputField value="{!conRoleWrap.conRoleContact.Phone}"
                                                              rendered="{!AND(IF(conRoleWrap.conRoleEdit = false, true, false),
                                                                        NOT(ISBLANK(conRoleWrap.conRole.Id)))}" />
                                            <apex:inputField value="{!conRoleWrap.conRoleContact.Phone}"
                                                             rendered="{!OR(IF(conRoleWrap.conRoleEdit = true, true, false),
                                                                        ISBLANK(conRoleWrap.conRole.Id))}" />
                                        </td>
                                        <td class="width10TdSub">
                                            <apex:outputField value="{!conRoleWrap.conRoleContact.MobilePhone}"
                                                              rendered="{!AND(IF(conRoleWrap.conRoleEdit = false, true, false),
                                                                        NOT(ISBLANK(conRoleWrap.conRole.Id)))}" />
                                            <apex:inputField value="{!conRoleWrap.conRoleContact.MobilePhone}"
                                                             rendered="{!OR(IF(conRoleWrap.conRoleEdit = true, true, false),
                                                                        ISBLANK(conRoleWrap.conRole.Id))}" />
                                        </td>
                                        <td width="140px" class="width10TdSub">
                                            <apex:outputField value="{!conRoleWrap.conRoleContact.Email}" 
                                                              rendered="{!AND(IF(conRoleWrap.conRoleEdit = false, true, false),
                                                                        NOT(ISBLANK(conRoleWrap.conRole.Id)))}"/>
                                            <apex:inputField value="{!conRoleWrap.conRoleContact.Email}"
                                                             rendered="{!OR(IF(conRoleWrap.conRoleEdit = true, true, false),
                                                                        ISBLANK(conRoleWrap.conRole.Id))}"/>
                                        </td>
                                   </tr>
                                </apex:repeat>
                            </tbody>
                        </table>
                    </div>
                    <div style="margin-top: 10px;">
                        {!IF((conRoleOffsetsize + 1) > conRoleRecordCount,
                        IF(conRoleRecordCount - conRoleBlockSize <= 0, 0, conRoleRecordCount - conRoleBlockSize),
                        conRoleOffsetsize + 1)} - {!conRoleWrapperLst.size + conRoleOffsetsize}
                        of {!conRoleRecordCount}
                    </div>
                    <div class="pagination-btn-grp-wrapper">
                        <div class="slds-button-group pagination-btn-grp" role="group">
                            <button class="slds-button slds-button--neutral first"
                                    onclick="beginningContactRoles(); return false;">&lt;&lt;</button>
                            <button class="slds-button slds-button--neutral previous"
                                    onclick="previousContactRoles(); return false;">&lt;</button>
                            <button class="slds-button slds-button--neutral next"
                                    onclick="nextContactRoles(); return false;">&gt;</button>
                            <button class="slds-button slds-button--neutral last"
                                    onclick="endContactRoles(); return false;">&gt;&gt;</button>
                        </div>
                        <script>
                            t$ = jQuery.noConflict();
                            if("{!conRoleOffsetsize != 0}" == 'false') {
                                t$('[title~=ContactRole] .pagination-btn-grp .first').attr('disabled', 'disabled');
                                t$('[title~=ContactRole] .pagination-btn-grp .previous').attr('disabled', 'disabled');
                            } else {
                                t$('[title~=ContactRole] .pagination-btn-grp .first').removeAttr('disabled');
                                t$('[title~=ContactRole] .pagination-btn-grp .previous').removeAttr('disabled');
                            }
                            if("{!conRoleWrapperLst.size + conRoleOffsetsize < conRoleRecordCount}" == 'false') {
                                t$('[title~=ContactRole] .pagination-btn-grp .next').attr('disabled', 'disabled');
                                t$('[title~=ContactRole] .pagination-btn-grp .last').attr('disabled', 'disabled');
                            } else {
                                t$('[title~=ContactRole] .pagination-btn-grp .next').removeAttr('disabled');
                                t$('[title~=ContactRole] .pagination-btn-grp .last').removeAttr('disabled');
                            }
                        </script>
                    </div>
                </div>
                <apex:actionFunction name="beginningContactRoles" action="{!beginningContactRoles}"
                        rerender="ContactRoleTable" oncomplete="rerenderHandlerContactRole();"
                        status="loadingPanel"/>
                <apex:actionFunction name="previousContactRoles" action="{!previousContactRoles}"
                        rerender="ContactRoleTable" oncomplete="rerenderHandlerContactRole();"
                        status="loadingPanel"/>
                <apex:actionFunction name="nextContactRoles" action="{!nextContactRoles}"
                        rerender="ContactRoleTable" oncomplete="rerenderHandlerContactRole();"
                        status="loadingPanel"/>
                <apex:actionFunction name="endContactRoles" action="{!endContactRoles}"
                        rerender="ContactRoleTable" oncomplete="rerenderHandlerContactRole();"
                        status="loadingPanel"/>
            </apex:pageBlock>
            <apex:inputHidden value="{!conRoleSortExpression}" id="conRoleSortHiddencriterian"/>
            <apex:inputHidden value="{!conRoleSortDirection}" id="conRoleSortHiddenOrder"/>
            <apex:inputHidden value="{!conRoleSortExprFieldApi}" id="conRoleSortFieldApi"/>
        </apex:outputPanel>
        <apex:actionFunction action="{!newContactRole}"
                             name="newContactRole"
                             rerender="ContactRoleTable"
                             oncomplete="rerenderHandlerContactRole();"
                             status="loadingPanel"/>
        <apex:actionFunction action="{!saveContactRoles}"
                             name="saveContactRoles"
                             rerender="ContactRoleTable"
                             oncomplete="rerenderHandlerContactRole();"
                             status="loadingPanel"/>
        <apex:actionFunction name="contactdetailfetch"
                             action="{!contactFetch}"
                             rerender="ContactRoleTable"
                             oncomplete="rerenderHandlerContactRole();"
                             status="loadingPanel" >
            <apex:param name="roleIndex" value="" assignTo="{!conRoleIndexToFetch}"/>
        </apex:actionFunction>
        <apex:actionFunction action="{!sortContactRoles}"
                             name="sortAllContactRoles"
                             rerender="ContactRoleTable"
                             oncomplete="rerenderHandlerContactRole();"
                             status="loadingPanel" >
            <apex:param name="conRoleTypeParam" value="" />
        </apex:actionFunction>
    </apex:form>
    <script>
        var tabIdContactRole;
        var isInConsoleContactRole = false;

        function setEventListenersContactRole() {
            t$("[id$='ContactRoleTable'] .width10TdSub a").click(function() {
                var elementId = event.target.id;
                if(elementId.indexOf('lookup') == 0) {
                    if(isInConsoleContactRole) {
                        openConsoleTabContactRoleNewTab(event.target.href);
                    } else {
                        window.open(event.target.href);
                    }
                    event.preventDefault();
                }
            });

            t$('[id$=ContactRoleTable] .slds-scrollable--x').on('scroll', function() {
                t$(':focus').blur();
                t$('.datePicker').css('display', 'none');
            });
        }

        function initCallContactRole() {
            setIsConsoleContactRole();
            getFocusedPrimaryTabId();
        }

        function setIsConsoleContactRole() {
            var inConsole = false;
            var url = document.location.href;
            inConsole = url.indexOf('isConsole=1') > -1;
            if(inConsole) {
                isInConsoleContactRole = inConsole;
            } else {
                isInConsoleContactRole = sforce.console.isInConsole();
            }
        }

        function getFocusedPrimaryTabId() {
            sforce.console.getFocusedPrimaryTabId(showTabIdLoanBalance);
        }

        var showTabIdSubmission = function showTabIdContactRole(result) {
            //Display the tab ID
            tabIdContactRole = result.id;
        };

        function runNewContactRole()
        {
            setTimeout(function()
            {
                newContactRole();
            }, 200);
        }

        function runSaveContactRoles()
        {
            setTimeout(function()
            {
                saveContactRoles();
            }, 200);
        }

        function contactDetailNew(roleIndex)
        {
            contactdetailfetch(roleIndex);
        }

        function sortCallContactRoles(conRoleFieldDataType)
        {
            /*
              event.target will have the DOM structure on which the event is fired.So here salesforce automically will
              pick up native html id of the selector
            */
             var conRoleElement= event.target;
             var newconRoleSortCol = t$(conRoleElement).attr("Name"); // new sort field
             t$("input[id$='conRoleSortFieldApi']").val(newconRoleSortCol);
             var oldconRoleSortCol = t$("input[id$='conRoleSortHiddencriterian']").val();
             var indexConRole;
             var conRoleTempSortExpr;
             if(newconRoleSortCol.endsWith('__c'))
             {
                 indexConRole = newconRoleSortCol.indexOf('__');
             }
             else if(newconRoleSortCol.endsWith('Id'))
             {
                 indexConRole = newconRoleSortCol.indexOf('Id');
             }
             if(indexConRole != null) {
                 conRoleTempSortExpr = newconRoleSortCol.substring(0, indexConRole);
             }
             else
             {
                 conRoleTempSortExpr = newconRoleSortCol;
             }

           //if(String(newconRoleSortCol) == String(oldconRoleSortCol))
           if(oldconRoleSortCol.indexOf(conRoleTempSortExpr) != -1)
            {
                if(String(t$("input[id$='conRoleSortHiddenOrder']").val()) == "ASC")
                {
                  t$("input[id$='conRoleSortHiddenOrder']").val("DESC");
                  t$(conRoleElement).removeClass('SortAsc').addClass('SortDesc');
                }
                else
                {
                  t$("input[id$='conRoleSortHiddenOrder']").val("ASC");
                  t$(conRoleElement).removeClass('SortDesc').addClass('SortAsc');
                }
                t$("input[id$='conRoleSortHiddencriterian']").val(newconRoleSortCol);
                sortAllContactRoles(conRoleFieldDataType);
            }
            else
            {
                t$("input[id$='conRoleSortHiddencriterian']").val(newconRoleSortCol);
                t$("input[id$='conRoleSortHiddenOrder']").val("ASC");
                t$(conRoleElement).removeClass('sorting').addClass('SortAsc');
                sortAllContactRoles(conRoleFieldDataType);
            }
        }

        function openConsoleTabContactRoleNewTab(url, tabLabel) {
            sforce.console.openPrimaryTab(null, url, true, tabLabel, function(r){});
        }

        function openContactRoleEditPage(oppId) {
            event.preventDefault();
            var urlLink = '/p/opp/ContactRoleEditUi/e?oppid='+oppId;
            console.log('isInConsoleContactRole: ', isInConsoleContactRole)
            if(isInConsoleContactRole) {
                openConsoleTabContactRoleNewTab(urlLink, '');
            } else  {
                window.open(urlLink);
            }
        }
    </script>
</apex:component>