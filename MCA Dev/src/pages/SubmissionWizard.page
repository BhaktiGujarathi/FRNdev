<apex:page controller="SubmissionWizardController"
        title="Submission Wizard" sidebar="false" showHeader="false">

    <head>
        <title>Submission Wizard</title>
    </head>

    <apex:includescript value="//code.jquery.com/jquery-1.11.1.min.js"/>
    <apex:includeScript value="/support/console/26.0/integration.js"/>
    <apex:stylesheet value="{!URLFOR($Resource.SLDS213, 'assets/styles/salesforce-lightning-design-system-vf.min.css')}"/>

    <style>
        /* Style for Back to Opportunity link */
        .backLineDiv {
            margin-top: -23px;
            padding-bottom: 15px !important
        }

        /*Display popup on button click*/
        .popupBackground {
            background-color: rgba(0,0,0,0.5);
            filter: alpha(opacity = 20);
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 1;
        }

        .custPopup {
            background-color: white;
            /*border-width: 2px;************/
            /*border-style: solid;*/
            z-index: 2; /* for popup*/
            left: 50%;
            padding: 10px;
            position: absolute;
            /* These are the 3 css properties you will need to change so the popup
                    displays in the center of the screen. First set the width. Then set
                    margin-left to negative half of what the width is. You can add
                    the height property for a fixed size pop up if you want.*/
            width: 400px;
            margin-left: -250px;
            top: 30%;
        }

        #dropbox {
            width: 90%;
            /*height:30px;*/
            padding: 1.145em;
            margin: 0 auto;
            margin-bottom:14px;
            border: 6px white double;
            color:white;
            font-weight:bold;
            font-size:14px;
            border-color: white !important;
            border-radius:20px;
            background-color:#69c;
        }

        #preview {
            display: none;
            margin: 1.125em auto;
            /*border: 1px solid pink;*/
        }

        .SummaryLine {
            border-top-color: #cfeef8 !important;
            border-top-style: solid !important;
            border-top-width: 2px !important;
            margin-bottom: 5px !important;
        }

        .filter-table {
            width: 100%;
        }

        .filter-table th {
            min-width: 8%;
            padding: 6px;
        }

        .filter-table input {
            width: 80% !important;
        }

        .empty {
            display:none;
        }

        .apexp .bPageBlock .dataCol .td {
            /*width: 5%;*/
            /*padding-right: 57px;*/
        }

        /***********CSS APPLIED ON FRIDAY************/
       /* .apexp .bPageBlock .detailList {/*This property is used to set the
                                          table of deal summary section
            width: 100%;
            padding-right: 57px;
        }*/

        .bPageBlock .detailList .dataCol {
            width: 0%;
            padding-right: 20px;
            padding-left: 0px;
        }

        .noProgramStyle {
            font-size: medium;
        }

        [id$='thankYouBlock'] th {
            font-weight: bold !important;
        }

        /************************3-1-17 LDS CSS******************************/
        body, .noProgramStyle, h3, .popupBackground, .attachmentSection, h2, #droplabel, .dataCell span  {
            font-family:'Salesforce Sans', Arial, sans-serif!important;
        }

        #subWizardSection .fundApp table, #subWizardSection th, #subWizardSection td {
            line-height: 1.6em!important;
        }

        #subWizardSection .apexp .bPageBlock.apexDefaultPageBlock .pbBody {
            margin-top: -3px!important;
        }

        [id$='tstpopup'] .apexp .bPageBlock.apexDefaultPageBlock .pbBody {
            margin: 0px !important;
        }

        [id$='tstpopup'] ul {
            list-style: initial;
            padding-left: 30px;
        }

        #subWizardSection th label {
            font-family:'Salesforce Sans', Arial, sans-serif!important;
        }

        #subWizardSection .btn {
            font-size: 12px!important;
            line-height: 1.875rem!important;
            text-decoration: none!important;
            color: white !important;
            transition: color 50ms linear,background-color 50ms linear;
            background: #0070d2 !important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            vertical-align: middle!important;
            padding: 0px 10px!important;
            font-weight: 500!important;
            border-radius: 0.25rem!important;
            margin:0 4px!important;
            border-color:#d8dde6!important;
        }

        #subWizardSection .btn-brand {
            font-size: 12px!important;
            line-height: 1.875rem!important;
            text-decoration: none!important;
            color: white !important;
            transition: color 50ms linear,background-color 50ms linear;
            background: #0070d2 !important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            vertical-align: middle!important;
            padding: 0px 10px!important;
            font-weight: 500!important;
            border-radius: 0.25rem!important;
            margin:0 4px!important;
            border-color:#d8dde6!important;
        }

        #subWizardSection .btn-brand:hover, #subWizardSection .btn:hover {
            background-color: #005FB2 !important;
        }

        #subWizardSection input[type="email"],
        #subWizardSection input[type="number"],
        #subWizardSection input[type="password"],
        #subWizardSection input[type="tel"],
        #subWizardSection input[type="url"],
        #subWizardSection input[type="text"] {
            background-color: #fff!important;
            color: #16325c!important;
            border: 1px solid #d8dde6!important;
            border-radius: 4px!important;
            transition: border .1s linear,background-color .1s linear!important;
            height:28px!important;
            padding-left: 8px!important;
            padding-right: 8px!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            font-size: 12px;
        }

        select{
            background-color: #fff!important;
            color: #16325c!important;
            border: 1px solid #d8dde6!important;
            border-radius: 4px!important;
            transition: border .1s linear,background-color .1s linear!important;
            height:28px!important;
            padding-left: 8px!important;
            padding-right: 8px!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            font-size: 12px;
        }

        #subWizardSection select{
            width: 85%!important;
        }

        #subWizardSection .datePicker select {
            width: 36%!important;
        }

        #subWizardSection a {
            font-family:'Salesforce Sans', Arial, sans-serif!important;
        }

        #subWizardSection input[type="email"]:focus,
        #subWizardSection input[type="number"]:focus,
        #subWizardSection input[type="password"]:focus,
        #subWizardSection input[type="tel"]:focus,
        #subWizardSection input[type="url"]:focus,
        #subWizardSection input[type="text"]:focus,
        #subWizardSection select:focus{
            outline: 0!important;
            border-color: #1589ee!important;
            background-color: #fff!important;
            box-shadow: 0 0 3px #0070D2!important;
        }

        #subWizardSection .dateOnlyInput input {
            width: 54%!important;
        }

        #subWizardSection textarea{
            background-color: #fff!important;
            color: #16325c!important;
            border: 1px solid #d8dde6!important;
            border-radius: 4px!important;
            width: 80%;
            transition: border .1s linear,background-color .1s linear!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            padding-left: 8px!important;
            padding-right: 8px!important;
            padding-top:5px!important;
        }

        #subWizardSection .bPageBlock {
            background: #f7f9fb !important;
            /*padding:5px!important;*/
            border-radius: .25rem!important;
            border-top:1px solid #eaeaea!important;
        }

        .bPageBlock {
            background : #f7f9fb !important;
        }

        #subWizardSection .fundApp .headerCss {
            padding: 5px!important;
            font-size: 13px!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            padding-left: 10px!important;
        }

        #subWizardSection .bPageBlock{
            background : #fff!important;
        }

        .btnContainerTable {
            padding-top: 5px;
            padding-bottom: 7px;
        }
        /*.headerRow div {
            color: #54698d!important;
            text-transform: uppercase;
            font-weight: 300!important;
            letter-spacing: .0625rem;
            line-height: 1.25;
            font-size: 12px;
        }*/

        .headerRow th {
            border-bottom: 1px solid #d8dde6!important;
            font-family:'Salesforce Sans', Arial, sans-serif!important;
            font-size:13px!important;
            font-weight:600!important;
        }

        body .pbBody table.list tr.headerRow th {
            font-size: 11px!important;
            font-weight: bold !important;
            background: #fff!important;
            border: none!important;
            border-bottom: 1px solid #d8dde6!important;
            border-top: 1px solid #d8dde6!important;
            padding-top: 8px;
            padding-bottom: 4px;
            color: #54698d;
            letter-spacing: 0px;
        }

        #subWizardSection th a {
            color: #54698d !important;
        }

        #subWizardSection .bPageBlock{
            border: none !important;
        }

        .slds-spinner {
            position: fixed !important;;
        }

        .mainTitle{
            font-size: 17px!important;
            font-weight: 600;
            margin-bottom: -16px!important;
        }

        .detailList .dataCol{
            padding-top: 10px!important;
            padding-bottom: 5px!important;
        }

        #subWizardSection td {
            font-family:'Salesforce Sans', Arial, sans-serif!important;
        }

        .detailLabel {
            font-size: 12px!important;
        }

        .pbBody table.list {
            border:none!important;
        }

        .pbBody table.list tr.dataRow td {
            padding-top: 8px!important;
            padding-bottom: 8px!important;
            border-bottom:1px solid #d8dde6!important;
        }

        /*.pbBody .pbSubheader {
            padding-top: 15px!important;
            padding-bottom: 5px!important;
        }*/

        #droplabel{
            font-weight: 600!important;
            font-size: 15px!important;
            color: #909090;
        }

        .emptyRecord {
            padding-top: 2px!important;
            padding-left: 20px;
            padding-bottom: 4px;
            text-align: center;
        }

        .bPageBlock .detailList tr th {
            border-color: #d8dde6!important;
        }

        .pbSubheader h3{
            font-size: 15px!important;
            font-weight: 500!important;
        }

        #dropbox{
            width: 90%!important;
            padding: 25px!important;
            margin: 0 auto!important;
            margin-bottom: 14px!important;
            border: 1px dashed #6d6d6d!important;
            color: #69c!important;
            border-radius: 10px!important;
            background-color: white!important;
        }

        .sfdc_richtext {
            font-family:'Salesforce Sans', Arial, sans-serif!important;
        }

        .dataRow:hover {
            background:#F4F6F9!important;
        }

        body .bDetailBlock.bPageBlock .pbBody .pbSubheader,
        body.FindSimilarOppsSearchUi .bPageBlock .pbBody .pbSubheader {
            /*background-color: transparent !important;*/
            font-size: 91% !important;
            font-weight: bold !important;
            margin-top: 0px !important;
        }

        input[id$="searchBox"] {
            width: 180px;
        }

        .cmb .slds-page-header__title {
            font-size: 25px !important;
        }

        .cmb body, .cmb:not(html) {
            font-size: 100% !important;
        }

        #programTableContainer img {
            height: 12px !important;
        }

        .slds-page-header {
            /*background-color: #16325c !important;
            color: white !important;*/
        }

        .slds-spinner_container {
            position: fixed !important;
        }

        .pbBody {
            /*background-color: #F7F9FB !important;*/
        }

        /* Padding for page */
        [id$=dealSummary] .pbSubsection {
            padding-left: 25px;
        }

        .filter-table, #programTableWrapper {
            padding-left: 20px;
            padding-right: 20px;
        }

        .emptyRecord {
            padding-left: 20px;
        }

        .attachmentSection .detailList {
            padding-left: 10px !important;
            padding-right: 20px !important;
        }

        .filter-table, .btnContainerTable, #programTableContainer,
        .emptyRecord, #attachmentBtn, #programTableWrapper {
            background-color: #f8f8f8 !important;
        }

        #attachmentBtn {
            width: 100%;
            padding-bottom: 12px;
        }

        .dateFormat a {
            color: black !important;
            text-decoration: underline !important;
        }

        [id$=prgmPanel] .pbSubheader {
            margin-bottom: 0px !important;
            padding-bottom: 2px !important;
            background-color: #f8f8f8 !important;
        }

        #fundingoLogo {
            height: 20px !important;
        }

        #headerValue {
            padding-left: 3px;
            display: initial;
            height: 50px !important;
            vertical-align: middle;
        }
    </style>

    <body>

        <!-- Page header -->
        <div class="cmb">
            <div class="slds-page-header">
                <div class="slds-grid">
                    <div class="slds-col slds-has-flexi-truncate">
                        <div class="slds-media slds-no-space slds-grow">
                            <div class="slds-media__body">
                                <p class="slds-text-title--caps slds-line-height--reset">
                                </p>
                                <h1 class="slds-page-header__title slds-m-right--small slds-align-middle slds-truncate"
                                    title="Submission Wizard">
                                    <img src="{!$Resource.FundingoLogo}" id="fundingoLogo"/>
                                    <div id="headerValue">
                                        Submission Wizard
                                    </div>
                                </h1>
                            </div>
                        </div>
                    </div>
                    <apex:outputPanel rendered="{!!isInConsole}">
                    <div class="slds-col slds-no-flex slds-grid slds-align-middle">
                        <button class="slds-button slds-button--neutral" onclick="navigateToOpp();">
                            &lt;&lt; Back to Opportunity
                        </button>
                    </div>
                    </apex:outputPanel>
                </div>
            </div>
        </div>

    <apex:form id="form">
        <script>
            var previousTimeStamp = 0;
            var isInConsoleFlag = '{!isInConsole}';

            $(document).ready(function() {
                /*$('[id$=openInPopup]').click(function(event) {
                    event.preventDefault();
                    var url = event.target;
                    if ($(url).is("a")) {
                        var urlToRedirect = url.href;
                        if(isInConsoleFlag == 'true') {
                            if(urlToRedirect.indexOf('srcUp') > -1) {
                                urlToRedirect = getUrlFromJavascriptUri(urlToRedirect);
                            }
                            openConsoleNewPrimaryTab(urlToRedirect);
                        } else {
                            window.open(urlToRedirect, '_blank');
                        }
                    }
                    //window.open(url, '_blank');
                });*/
                openRedirectURL();
                // Search box event handler
                $('[id$=searchBox]').keypress(function(event) {
                    // Check 3 or more characters are entered
                    // This is magic. Not actually.
                    // keypress event gives the previous value, so had to check >= 2
                    console.log(event.target.value);
                    if(event.target.value.length >= 2) {
                        var diff = event.timeStamp - previousTimeStamp;
                        // Set timeout to call search method only if
                        //  user has not entered any characters for 1 sec
                        setTimeout(function () {
                            console.log('diff: ', diff);
                            console.log('previousTimeStamp: ', previousTimeStamp);
                            if(previousTimeStamp === 0 || diff != event.timeStamp) {
                                previousTimeStamp = event.timeStamp;
                                searchValues();
                            }
                        }, 1000);
                    }
                });

                // To display all prorams when search result is cleared
                $('[id$=searchBox]').keyup(function(event) {
                    // Key code for backspace and delete
                    if(event.keyCode == '8' || event.keyCode == '46') {
                        if(event.target.value.length < 1 || event.target.value.length > 2) {
                            searchValues();
                        }
                    }
                });

                 $('[id$=searchBox]').bind('paste', function(event) {
                    var data = event.originalEvent.clipboardData.getData('Text');
                    if(data.length > 2) {
                        $('[id$=searchBox]').keyup(function(event) {
                            if(event.target.value.length < 1 || event.target.value.length > 2) {
                                searchValues();
                            }
                        });
                    }
                });

                $('[id$=searchBox]').bind('blur', function(event) {
                    previousTimeStamp = 0;
                });
            });

            function openRedirectURL() {
                $('.subWizardPageData').click(function(event) {
                    var target = event.target;
                    console.log('--1---',$(target).hasClass("showMoreLink"));
                    if($(target).is("a") && !$(target).hasClass("showMoreLink")) {
                        var url = event.target;
                        var urlToRedirect = url.href;
                        event.preventDefault();
                        if(isInConsoleFlag == 'true') {
                            openConsoleNewPrimaryTab(urlToRedirect);
                        } else {
                            window.open(urlToRedirect, '_blank');
                        }
                    }
                    if($(target).is("a")
                        && (event.target.id.indexOf('openInNewTab') > 0
                            || event.target.id.indexOf('lookup') == 0)
                        ) {
                        event.preventDefault();
                        var url = event.target;
                        var urlToRedirect = url.href;
                        if(isInConsoleFlag == 'true') {
                            if(urlToRedirect.indexOf('srcUp') > -1) {
                                urlToRedirect = getUrlFromJavascriptUri(urlToRedirect);
                            }
                            openConsoleNewPrimaryTab(urlToRedirect);
                        } else {
                            window.open(urlToRedirect, '_blank');
                        }
                    }
                });
            }

            function onCompleteHandler() {
                openRedirectURL();
            }

            /* This function gets the URL from srcUp statement in console */
            function getUrlFromJavascriptUri(pUrlToRedirect) {
                pUrlToRedirect = decodeURIComponent(pUrlToRedirect);
                var urlToRedirect = pUrlToRedirect.split('(\'')[1];
                urlToRedirect = urlToRedirect.split('\'')[0];
                return urlToRedirect;
            }

            function checkErrorMessage(){
                if ($(".messageText")[0]) {
                    $('html, body').animate({scrollTop: '0px'}, 300);
                }
            }

            function openConsoleNewPrimaryTab(url, tabLabel) {
                console.log('----primary tab ');
                sforce.console.openPrimaryTab(null, url, true, tabLabel, function (r) {});
            }
        </script>
        <apex:pageMessages id="pageMessageId" escape="false"/>
        <div id="subWizardSection" class="subWizardPageData">
            <!-- Start of Submission Wizard block -->
            <apex:pageBlock id="notThankYouBlock" mode="maindetail"
                rendered="{!NOT(showThankYouPage)}">
                <style>
                    .detailLabel {
                        font-weight: bold;
                        float:right;
                        color: #4a4a56;
                        font-family:'Salesforce Sans', Arial, sans-serif!important;
                        /*font-family: Arial,Helvetica,sans-serif;*/
                        font-size: 91%;
                        text-align: left !important;
                        white-space: nowrap;
                    }
                </style>
                <!-- Deal Summary Start -->
                <apex:outputPanel rendered="{!Not(isFieldSet)}" id="dealSummary">
                    <apex:pageBlockSection columns="4" title="Deal Summary" collapsible="true">
                        <apex:repeat value="{!fields}" var="fldSet">
                            <!--<table>
                                <thead>
                                    <tr>
                                        <td>
                                            {!fldSet}
                                        </td>
                                    </tr>
                                </thead>
                            </table>-->
                            <!--<apex:outputLabel styleClass="detailLabel" 
                                    value="{!fldSet.Label}"/>-->
                            <!--<apex:outputLabel styleClass="detailLabel" 
                                    value="{!fldSet.Type}"/> -->
                            <apex:outputPanel >
                            <strong><apex:outputLabel value="{!fldSet.Label}"/></strong>
                                <apex:outputPanel layout="block"
                                    style="{!IF(OR(fldSet.Type=='textarea'),'overflow-y: auto;
                                    max-height:55px;max-width:250px','max-width:400px')}"
                                    styleClass="fieldHolder">
                                    <apex:outputField id="openInPopup"
                                        value="{!oppFieldSet[fldSet.fieldPath]}"/>
                                </apex:outputPanel>
                            </apex:outputPanel>
                        </apex:repeat>
                    </apex:pageBlockSection>
                </apex:outputPanel>
                <!-- Deal Summary End -->

                <!-- programs filter section Start -->
                <apex:outputPanel title="Programs" id="prgmPanel"
                    style="margin-left: -1060px !important;">
                    <apex:pageBlockSection title="Programs" collapsible="false">
                    </apex:pageBlockSection>

                    <table cellspacing="0" cellpadding="0" border="0" class="filter-table">
                        <tr>
                            <th>
                                <apex:outputLabel value="Credit Score"/>
                            </th>
                            <th>
                                <apex:outputLabel value="Years in Business"/>
                            </th>
                            <th>
                                <apex:outputLabel value="Monthly Deposits $"/>
                            </th>
                            <th>
                                <apex:outputLabel value="Monthly Deposits #"/>
                            </th>
                            <th>
                                <apex:outputLabel value="Avg Daily Balance"/>
                            </th>
                            <th>
                                <apex:outputLabel value="NSFs"/>
                            </th>
                            <th>
                                <apex:outputLabel value="NDBs"/>
                            </th>
                            <th>
                                <apex:outputLabel value="Industry"/>
                            </th>
                            <th>
                                <apex:outputLabel value="State"/>
                            </th>
                            <th>
                                <apex:outputLabel value="Preferred Programs"/>
                            </th>
                        </tr>
                        <tr>
                            <td>
                                <apex:inputText value="{!creditScore}"
                                    onkeypress="return noenter(event);"/>
                            </td>
                            <td>
                                <apex:inputText value="{!yearInBusiness}"
                                    onkeypress="return noenter(event);"/>
                            </td>
                            <td>
                                <apex:inputText value="{!minMonthlyDeposite}"
                                    onkeypress="return noenter(event);"/>
                            </td>
                            <td>
                                <apex:inputText value="{!minDepositeCount}"
                                    onkeypress="return noenter(event);"/>
                            </td>
                            <td>
                                <apex:inputText value="{!minAvgDailyBalance}"
                                    onkeypress="return noenter(event);" />
                            </td>
                            <td>
                                <apex:inputText value="{!maxNSFs}"
                                    onkeypress="return noenter(event);"/>
                            </td>
                            <td>
                                <apex:inputText value="{!maxNDBs}"
                                    onkeypress="return noenter(event);"/>
                            </td>
                            <td>
                                <apex:inputCheckbox value="{!restrictedIndustry}"
                                    onkeypress="return noenter(event);"/>
                            </td>
                            <td>
                                <apex:inputCheckbox value="{!restrictedState}"
                                    onkeypress="return noenter(event);"/>
                            </td>
                            <td>
                                <apex:inputCheckbox value="{!prefferedProgram}"
                                    onkeypress="return noenter(event);"/>
                            </td>
                        </tr>
                    </table>
                    <br/>
                    <table class="btnContainerTable">
                        <tr>
                            <td width="50%"></td>
                            <td>
                                <apex:commandButton id="filterBtn" value="Filter"
                                                    action="{!getPrograms}"
                                                    rerender="form"
                                                    status="loadingAttachment"
                                                    onclick="showDisablingDiv();"
                                                    oncomplete="hideDisablingDiv();checkErrorMessage();"/>
                            </td>
                            <td width="40%">
                                <apex:commandButton id="clrFilter" value="Clear Filters"
                                                    action="{!clearFilter}"
                                                    rerender="form"
                                                    status="loadingAttachment"
                                                    onclick="showDisablingDiv();"
                                                    oncomplete="hideDisablingDiv();"/>
                            </td>
                            <td style="padding-right: 20px;">
                                <apex:inputText value="{!searchQuery}" id="searchBox"
                                    html-placeholder="Enter Program or Bank name"/>
                                <apex:actionfunction name="searchValues" action="{!searchPrograms}"
                                         rerender="pgmTable, pageMessageId, attachmentTable"
                                        status="loadingAttachment"/>
                            </td>
                        </tr>
                    </table>
                </apex:outputPanel>
                <!-- programs filter section End -->
                <br/>
                <!-- programs Data section Start -->
                <apex:outputPanel id="pgmTable">
                    <script type="text/javascript">
                        function checkAll(event, elementId, className) {
                            var element = event.target;
                            if(element.checked)
                            { // check select status
                                if(className == 'masterCheck')
                                {
                                    $('.iptCheckbox').each(function() { //loop through each checkbox
                                        this.checked = true;
                                        //select all checkboxes with class "checkbox1"
                                    });
                                }
                                else if(className == 'masterCheckAttach')
                                {
                                    $('.iptCheckboxAttach').each(function() { //loop through each checkbox
                                        this.checked = true;
                                        //select all checkboxes with class "checkbox1"
                                    });
                                }
                            }
                            else
                            {
                                if(className == 'masterCheck')
                                {
                                    $('.iptCheckbox').each(function() { //loop through each checkbox
                                        this.checked = false; //deselect all checkboxes with class "checkbox1"
                                    });
                                }
                                else if (className == 'masterCheckAttach')
                                {
                                    $('.iptCheckboxAttach').each(function() { //loop through each checkbox
                                        this.checked = false; //deselect all checkboxes with class "checkbox1"
                                    });
                                }
                            }
                        }

                        function selectOne(event, elementId, className) {
                            var element=event.target;
                            if (element.checked)
                            {
                                if(className == 'iptCheckbox')
                                {
                                    if($('.iptCheckbox:checked').length == $('.iptCheckbox').length){
                                        $('.masterCheck').each(function() { //loop through each checkbox
                                            this.checked = true;  //select all checkboxes with class "checkbox1"
                                        });
                                    }
                                }
                                else if(className == 'iptCheckboxAttach')
                                {
                                    if($('.iptCheckboxAttach:checked').length == $('.iptCheckboxAttach').length){
                                        $('.masterCheckAttach').each(function() { //loop through each checkbox
                                            this.checked = true;  //select all checkboxes with class "checkbox1"
                                        });
                                    }
                                }
                            }
                            else
                            {
                                if(className == 'iptCheckbox')
                                {
                                    $('.masterCheck').each(function() { //loop through each checkbox
                                        this.checked = false;  //select all checkboxes with class "checkbox1"
                                    });
                                }
                                else if(className == 'iptCheckboxAttach')
                                {
                                    $('.masterCheckAttach').each(function() { //loop through each checkbox
                                        this.checked = false;  //select all checkboxes with class "checkbox1"
                                    });
                                }
                            }
                        }
                        function onChangeSelectedProgram() {
                            selectedPrgValue();
                        }
                    </script>
                    <apex:actionFunction Name="selectedPrgValue"
                                         action="{!toStoreSelectedProgram}"
                                         rerender="none" />
                    <div class="cmb" id="programTableWrapper">
                        <div id="programTableContainer" class="slds-scrollable--x">
                            <apex:dataTable value="{!programWrapListLimit}"
                                var="pgmWrapper"
                                id="table"
                                styleClass="slds-table slds-table--bordered slds-table--striped"
                                rendered="{!programWrapListLimit.size <> 0}">
                                <apex:column style="text-align: center;">
                                    <apex:facet name="header">
                                        <script>
                                            if($('.iptCheckbox:checked').length != $('.iptCheckbox').length){
                                                //loop through each checkbox
                                                $('.masterCheck').each(function() {
                                                    //select all checkboxes with class "checkbox1"
                                                    this.checked = false;
                                                });
                                            }
                                        </script>
                                        <apex:inputCheckbox id="pgmCheckBoxId"
                                                styleClass="masterCheck"
                                                onchange="selectedPrgValue();"
                                                onclick="checkAll(event,'pgmCheckBoxId','masterCheck');"/>
                                    </apex:facet>
                                    <apex:inputCheckbox value="{!pgmWrapper.isSelected}" id="checkBox"
                                            styleClass="iptCheckbox"
                                            onChange="onChangeSelectedProgram();"
                                            onclick="selectOne(event,'checkBox','iptCheckbox');">
                                    </apex:inputCheckbox>
                                </apex:column>

                                <apex:column value="{!pgmWrapper.prgm['Bank__c']}" id="openInNewTab">
                                    <apex:facet name="header">
                                        <apex:commandLink action="{!ViewSortedData_Program}" id="cmdSortBankName"
                                            reRender="pgmTable"
                                            status="loadingAttachment"
                                            value="Bank{!IF(sortExpression=='Bank__r.Name',
                                                    IF(sortDirection='ASC','▲','▼'),'')}">
                                            <apex:param value="Bank__r.Name" name="column" 
                                                assignTo="{!sortExpression}">
                                            </apex:param>
                                        </apex:commandLink>
                                    </apex:facet>
                                </apex:column>

                                <apex:column >
                                    <a id="{!pgmWrapper.prgm['Id']}openInNewTab"
                                        href="{!URLFOR($Action.Program__c.View,pgmWrapper.prgm['Id'], null,true)}"
                                        onmouseover="LookupHoverDetail.getHover('{!pgmWrapper.prgm['Id']}', 
                                                    '/{!pgmWrapper.prgm['Id']}/m?retURL={!pgmWrapper.prgm['Id']}&isAjaxRequest=1').show();"
                                        onmouseout="LookupHoverDetail.getHover('{!pgmWrapper.prgm['Id']}').hide();"
                                        onfocus="LookupHoverDetail.getHover('{!pgmWrapper.prgm['Id']}', 
                                                '/{!pgmWrapper.prgm['Id']}/m?retURL={!pgmWrapper.prgm['Id']}&isAjaxRequest=1').show();"
                                        onblur="LookupHoverDetail.getHover('{!pgmWrapper.prgm['Id']}').hide();"
                                        target="_blank">
                                        {!pgmWrapper.prgm['Name']}
                                    </a>
                                    <apex:facet name="header">
                                        <apex:commandLink id="cmdSortName"
                                                action="{!ViewSortedData_Program}"
                                                value="Program{!IF(sortExpression=='Name',IF(sortDirection='ASC','▲','▼'),'')}"
                                                reRender="pgmTable"
                                                status="loadingAttachment">
                                            <apex:param value="Name" name="column" assignTo="{!sortExpression}">
                                            </apex:param>
                                        </apex:commandLink>
                                    </apex:facet>
                                </apex:column>
                                <!-- FO-1357 Start-->
                                <apex:column style="text-align:center;">
                                    <apex:facet name="header">
                                        <apex:outputLabel value="Submission Method" />
                                    </apex:facet>
                                    <apex:selectList size="1" value="{!pgmWrapper.submissionMethodValue}">
                                        <apex:selectOptions value="{!submissionMethodOptions}"/>
                                    </apex:selectList>
                                </apex:column>
                                <apex:column style="text-align:center;">
                                    <apex:facet name="header">
                                        <apex:commandLink id="cmdSortCreditScore" 
                                            action="{!ViewSortedData_Program}"
                                            value="Credit Score{!IF(sortExpression=='Credit_Score__c',
                                            IF(sortDirection='ASC','▲','▼'),'')}"
                                            reRender="pgmTable"
                                            status="loadingAttachment">
                                            <apex:param value="Credit_Score__c"
                                                name="column"
                                                assignTo="{!sortExpression}">
                                            </apex:param>
                                        </apex:commandLink>
                                    </apex:facet>
                                    <apex:image url="/img/msg_icons/confirm16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer, "Credit_Score__c"), true , false)}"
                                        style="float:left;"/>
                                    <apex:image url="/img/msg_icons/error16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer, "Credit_Score__c"), false, true)}"
                                        style="float:left;"/>
                                    <apex:outputField value="{!pgmWrapper.prgm['Credit_Score__c']}" />
                                </apex:column>
                                <apex:column style="text-align:center;">
                                    <apex:facet name="header">
                                        <apex:commandLink id="cmdSortYearsInBui" action="{!ViewSortedData_Program}"
                                                value="Years in Biz{!IF(sortExpression=='Years_in_Business__c',
                                                IF(sortDirection='ASC','▲','▼'),'')}"
                                                reRender="pgmTable"
                                                status="loadingAttachment">
                                            <apex:param value="Years_in_Business__c" name="column" assignTo="{!sortExpression}">
                                            </apex:param>
                                        </apex:commandLink>
                                    </apex:facet>
                                    <apex:image url="/img/msg_icons/confirm16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer,
                                            "Years_in_Business__c"), true, false)}"
                                        style="float:left"/>
                                    <apex:image url="/img/msg_icons/error16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer,
                                            "Years_in_Business__c"), false , true)}"
                                        style="float:left;"/>
                                        <apex:outputField value="{!pgmWrapper.prgm['Years_in_Business__c']}"/>
                                </apex:column>
                                <apex:column style="text-align:center;">
                                    <apex:facet name="header">
                                        <apex:commandLink id="cmdSortMinMonthly" action="{!ViewSortedData_Program}"
                                            value="$ Deposits{!IF(sortExpression=='Min_Monthly_Deposits__c',
                                                IF(sortDirection='ASC','▲','▼'),'')}"
                                            reRender="pgmTable"
                                            status="loadingAttachment">
                                            <apex:param value="Min_Monthly_Deposits__c" name="column"
                                                assignTo="{!sortExpression}">
                                            </apex:param>
                                        </apex:commandLink>
                                    </apex:facet>
                                    <apex:image url="/img/msg_icons/confirm16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer,
                                            "Min_Monthly_Deposits__c"), true, false)}"
                                        style="float:left;"/>
                                    <apex:image url="/img/msg_icons/error16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer,
                                            "Min_Monthly_Deposits__c"), false , true)}"
                                        style="float:left;"/>
                                    <apex:outputText value="{0,number,$###,###}">
                                        <apex:param value="{!FLOOR(pgmWrapper.prgm['Min_Monthly_Deposits__c'])}"/>
                                    </apex:outputText>
                                </apex:column>
                                <apex:column style="text-align:center;">
                                    <apex:facet name="header">
                                        <apex:commandLink id="cmdSortDepositCount"
                                            action="{!ViewSortedData_Program}"
                                            value="# Deposits{!IF(sortExpression=='Minimum_Deposit_Count__c',
                                                IF(sortDirection='ASC','▲','▼'),'')}"
                                            reRender="pgmTable"
                                            status="loadingAttachment">
                                            <apex:param value="Minimum_Deposit_Count__c" name="column"
                                                assignTo="{!sortExpression}">
                                            </apex:param>
                                        </apex:commandLink>
                                    </apex:facet>
                                    <apex:image url="/img/msg_icons/confirm16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer, 
                                            "Minimum_Deposit_Count__c"), true, false)}"
                                        style="float:left;"/>
                                    <apex:image url="/img/msg_icons/error16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer, 
                                            "Minimum_Deposit_Count__c"), false , true)}"
                                        style="float:left;"/>
                                    <apex:outputField value="{!pgmWrapper.prgm['Minimum_Deposit_Count__c']}"/>
                                </apex:column>
                                <apex:column style="text-align:center;">
                                    <apex:facet name="header">
                                        <apex:commandLink id="cmdSortDailyBalance" 
                                            action="{!ViewSortedData_Program}"
                                            value="Avg Daily Balance{!IF(sortExpression=='Min_Avg_Daily_Bal__c',
                                                IF(sortDirection='ASC','▲','▼'),'')}"
                                            reRender="pgmTable"
                                            status="loadingAttachment">
                                            <apex:param value="Min_Avg_Daily_Bal__c" name="column"
                                                assignTo="{!sortExpression}">
                                            </apex:param>
                                        </apex:commandLink>
                                    </apex:facet>
                                    <apex:image url="/img/msg_icons/confirm16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer, 
                                            "Min_Avg_Daily_Bal__c"), true, false)}"
                                        style="float:left;"/>
                                    <apex:image url="/img/msg_icons/error16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer, 
                                            "Min_Avg_Daily_Bal__c"), false , true)}"
                                        style="float:left;"/>
                                    <apex:outputText value="{0,number,$###,###}">
                                        <apex:param value="{!pgmWrapper.prgm.Min_Avg_Daily_Bal__c}" />
                                    </apex:outputText>
                                </apex:column>
                                <apex:column style="text-align:center;">
                                    <apex:facet name="header">
                                        <apex:commandLink id="cmdSortMaxNSF"
                                            action="{!ViewSortedData_Program}"
                                            value="Max NSFs{!IF(sortExpression=='Max_No_NSFs__c',
                                                IF(sortDirection='ASC','▲','▼'),'')}"
                                            reRender="pgmTable"
                                            status="loadingAttachment">
                                            <apex:param value="Max_No_NSFs__c" name="column"
                                                assignTo="{!sortExpression}">
                                            </apex:param>
                                        </apex:commandLink>
                                    </apex:facet>
                                    <apex:image url="/img/msg_icons/confirm16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer, "Max_No_NSFs__c"), true, false)}"
                                        style="float:left;"/>
                                    <apex:image url="/img/msg_icons/error16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer, "Max_No_NSFs__c"), false , true)}"
                                        style="float:left;"/>
                                    <apex:outputField value="{!pgmWrapper.prgm['Max_No_NSFs__c']}"/>
                                </apex:column>
                                <apex:column style="text-align:center;">
                                    <apex:facet name="header">
                                        <apex:commandLink id="cmdSortMaxNDB" action="{!ViewSortedData_Program}"
                                            value="Max NDBs{!IF(sortExpression=='Max_NDBs__c',
                                                IF(sortDirection='ASC','▲','▼'),'')}"
                                            reRender="pgmTable"
                                            status="loadingAttachment">
                                            <apex:param value="Max_NDBs__c" name="column"
                                                assignTo="{!sortExpression}">
                                            </apex:param>
                                        </apex:commandLink>
                                    </apex:facet>
                                    <apex:image url="/img/msg_icons/confirm16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer, 
                                        "Max_NDBs__c"), true, false)}"
                                        style="float:left;"/>
                                    <apex:image url="/img/msg_icons/error16.png"
                                        rendered="{!IF(contains(pgmWrapper.matchingPer, 
                                        "Max_NDBs__c"), false , true)}"
                                        style="float:left;"/>
                                    <apex:outputField value="{!pgmWrapper.prgm['Max_NDBs__c']}"/>
                                </apex:column>
                                <apex:column style="text-align:center;">
                                <apex:facet name="header">
                                    <apex:commandLink id="cmdSortMaxAmt" action="{!ViewSortedData_Program}"
                                        value="Max Amount{!IF(sortExpression=='Max_Amount__c',
                                            IF(sortDirection='ASC','▲','▼'),'')}"
                                        reRender="pgmTable"
                                        status="loadingAttachment">
                                        <apex:param value="Max_Amount__c" name="column"
                                            assignTo="{!sortExpression}">
                                        </apex:param>
                                    </apex:commandLink>
                                </apex:facet>
                                <apex:outputText value="{0,number,$###,###}">
                                    <apex:param value="{!FLOOR(pgmWrapper.prgm['Max_Amount__c'])}" />
                                </apex:outputText>
                            </apex:column>

                            <apex:column style="text-align:center;">
                                <apex:facet name="header">
                                    <apex:commandLink id="cmdSortCommPer" action="{!ViewSortedData_Program}"
                                        value="Commission %{!IF(sortExpression=='Commission_Percentage__c',
                                            IF(sortDirection='ASC','▲','▼'),'')}"
                                        reRender="pgmTable"
                                        status="loadingAttachment">
                                        <apex:param value="Commission_Percentage__c" name="column"
                                            assignTo="{!sortExpression}">
                                        </apex:param>
                                    </apex:commandLink>
                                </apex:facet>
                                <apex:outputField value="{!pgmWrapper.prgm['Commission_Percentage__c']}"/>
                            </apex:column>

                            <apex:column style="text-align:center;">
                                <apex:outputText value="{0,number,$###,###}">
                                    <apex:param value="{!pgmWrapper.PotentialFundingAmt}" />
                                </apex:outputText>
                                <apex:facet name="header" >
                                    <apex:commandLink id="cmdSortPotFundAmt" action="{!ViewSortedData_Program}"
                                        value="Potential Funding Amt.{!IF(sortExpression=='Funding_Amt_of_Monthly_Gross_Sales__c',
                                            IF(sortDirection='ASC','▲','▼'),'')}"
                                        reRender="pgmTable"
                                        status="loadingAttachment">
                                        <apex:param value="Funding_Amt_of_Monthly_Gross_Sales__c" name="column"
                                            assignTo="{!sortExpression}">
                                        </apex:param>
                                    </apex:commandLink>
                                </apex:facet>
                            </apex:column>

                            <apex:column style="padding-right: 30px !important; min-width: 110px;">
                                <apex:outputPanel rendered="{!NOT(pgmWrapper.missingInfo)}">
                                    <apex:outputPanel >
                                        <apex:image value="/img/samples/color_green.gif"
                                                width="{!pgmWrapper.score}%"
                                                height="12" />
                                        <apex:image value="/img/samples/color_yellow.gif"
                                                width="{!(100 - pgmWrapper.score)}%"
                                                height="12" />
                                    </apex:outputPanel>&nbsp;
                                    <apex:outputText value="{0,number,###}">
                                        <apex:param value="{!pgmWrapper.score}" />
                                    </apex:outputText>%
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!(pgmWrapper.missingInfo)}">
                                    <apex:outputText value="Missing Info" style="color:Red;"/>
                                </apex:outputPanel>

                                <apex:facet name="header" >
                                    <apex:commandLink id="cmdSortScore" action="{!ViewSortedData_Program}"
                                        value="Matching %{!IF(sortExpression=='score',IF(sortDirection='ASC','▲','▼'),'')}"
                                        reRender="pgmTable"
                                        status="loadingAttachment">
                                        <apex:param value="score" name="column"
                                                assignTo="{!sortExpression}">
                                        </apex:param>
                                    </apex:commandLink>
                                </apex:facet>
                            </apex:column>

                            <apex:column id="subNotes">
                                <apex:facet name="header">
                                    <apex:commandLink action="{!ViewSortedData_Program}" id="cmdSortsubNotes"
                                                reRender="pgmTable"
                                                status="loadingAttachment"
                                                value="Submission Notes{!IF(sortExpression=='Notes__c',
                                                    IF(sortDirection='ASC','▲','▼'),'')}">
                                        <apex:param value="Notes__c" name="column" assignTo="{!sortExpression}">
                                        </apex:param>
                                    </apex:commandLink>
                                </apex:facet>
                                <apex:inputTextArea value="{!pgmWrapper.submissionNotesValue}" />
                            </apex:column>
                        </apex:dataTable>
                    </div>
                </div>
                <div class="emptyRecord">
                    <apex:outputText styleClass="noProgramStyle"
                        value="No programs were matched to the current filters." id="sizePgm"
                        rendered="{!programWrapListLimit.size == 0}" />
                    <apex:panelGrid columns="2" >
                        <apex:commandLink value="Show More>>" id="shwmore" action="{!showMore}"
                                        reRender="pgmTable"
                                        styleclass="showMoreLink"
                                        status="loadingAttachment"
                                        style="display:{!IF(OR(programWrapListLimit.size >= noofRecords),'none','block')};">
                        </apex:commandLink>
                        <apex:outputText rendered="{!hideShowPrgCount}">
                            {!startCount} - {!sizeOfProgram} of {!noOfRecords}
                        </apex:outputText>
                    </apex:panelGrid>
                </div>
            </apex:outputPanel>
            <div align="center" id="attachmentBtn">
                <apex:commandButton value="Review Required Documents"
                                    action="{!checkReqdDocument}"
                                    rerender="tstpopup,pageMessageId"
                                    status="loadingAttachment"
                                    id="delayBtn"
                                    styleClass="btn-brand"
                                    oncomplete="checkErrorMessage();"/>

                <apex:commandButton value="Assign Attachments"
                                    action="{!selectProgramForAtt}"
                                    id="selectAttachBtnId"
                                    rerender="attachmentTable,pageMessageId"
                                    status="loadingAttachment"
                                    styleClass="btn-brand"
                                    oncomplete="checkErrorMessage();"/>
            </div>

            <!-- Code for the popup -->
            <apex:outputPanel id="tstpopup">
                <apex:outputPanel styleClass="popupBackground" 
                    layout="block"
                    rendered="{!displayPopUp}"
                    id="parentPopup">
                    <apex:outputPanel styleClass="custPopup"
                        layout="block"
                        rendered="{!displayPopUp}"
                        id="actPopup">
                        <apex:pageBlock title="Required Documents" id="popup">
                            <apex:facet name="header">
                                <div style="padding:12px;font-size: initial;font-weight: bold; 
                                    border-bottom: 1px solid #eaeaea; background-color: #00396b;">
                                    Required Documents
                                </div>
                            </apex:facet>
                            <div class="cmb">
                                <div class="slds-scrollable--y" style="max-height: 150px; 
                                    padding: 10px; margin-top: 2px;">
                                    <apex:repeat value="{!prgmDocMap}" var="pgm" >
                                        <b><apex:outputText value="{!pgm}"/></b><br/>
                                        <apex:dataList value="{!prgmDocMap[pgm]}" var="doc" >
                                            <apex:outputText value="{!doc}"/>
                                        </apex:dataList>
                                    </apex:repeat>
                                </div>
                                <apex:outputText Value="There are no Required Documents for the selected Programs"
                                    rendered="{!MapSize}"/>
                            </div>
                        </apex:pageBlock>
                        <div align="center">
                            <apex:commandButton value="Close" action="{!closePopup}"
                                rerender="tstpopup" status="loadingAttachment"/>
                        </div>
                    </apex:outputPanel>
                </apex:outputPanel>
                </apex:outputPanel>
                <!-- End of Popup -->
                <!-- Start of Drag & Drop section -->
                <apex:outputPanel styleClass="attachmentSection">
                <apex:pageBlockSection title="Attachments" columns="1" collapsible="false" >
                    <apex:outputPanel id="dragDropSection">
                        <div style="border-width:2px;border:4px #69c;height:auto;width:auto;border-radius:17px;">  &nbsp;
                            <div id="dropbox">
                                <center><span id="droplabel">Drop files to attach</span></center>
                            </div>
                            <apex:outputPanel id="Op1">
                                <img id="preview" src="" alt="[ image will display here ]" />
                            </apex:outputPanel>
                        </div>
                    </apex:outputPanel>
                </apex:pageBlockSection>
                </apex:outputPanel>
                <!-- End of Drag & Drop section -->

                <apex:actionFunction name="refershCom" reRender="form" status="loadingAttachment">
                </apex:actionFunction>
                <apex:actionStatus id="loadingAttachment" layout="block">
                    <apex:facet name="start">
                        <!--<div id="assign-action-spinner-main">
                            <div id="assign-action-spinner-content">
                                <img src="/img/analytics/reportbuilder/icons/spinner32.gif" alt="Processing..." title="Processing..." />
                                <p>Processing...</p>
                            </div>
                        </div>-->
                        <div class="cmb">
                        <div class="slds-spinner_container">
                            <div role="status" class="slds-spinner slds-spinner--medium slds-spinner--brand">
                                <span class="slds-assistive-text">Loading</span>
                                <div class="slds-spinner__dot-a"></div>
                                <div class="slds-spinner__dot-b"></div>
                            </div>
                        </div>
                        </div>
                    </apex:facet>
                </apex:actionStatus>

                <!-- Start of Available Attachment Block -->
                <!-- <apex:pageblock mode="maindetail" rendered="{!NOT(showThankYouPage)}" id="Op">
                <div class="SummaryLine"></div>
                <h2><apex:outputText value="Available Attachments" style="font-size: 1.2em;"/></h2>-->
                <apex:outputPanel styleClass="attachmentSection">
                <apex:pageBlock id="Op" mode="maindetail">
                <!-- <apex:pageBlockButtons location="top"  id="saveButton" > -->
                    <div align="center" style="margin-bottom: 10px;">
                        <apex:commandButton onclick="runSaveAllAttachment();" 
                                value="Save"
                                rerender="showmsg pgBlkSctnAttachment"
                                styleClass="btn-brand"/>
                        <apex:commandButton value="Cancel" 
                                action="{!resetAttachments}"
                                rerender="Op" 
                                styleClass="btn-brand"
                                status="loadingAttachment" />
                        <apex:commandButton value="Add Attachments" 
                                action="{!openAttachment}"
                                styleClass="btn-brand"/>
                    </div>
                    <apex:pageblocksection columns="1" id="attachmentTable">
                        <apex:pageBlockTable value="{!AttachmentWrapperList}" var="attachmentWrapper"
                                id="pgBlkSctnAttachment">
                            <apex:column >
                                <apex:facet name="header">
                                    <apex:outputText value="Select All Attachment"/>
                                    <script>
                                        if($('.iptCheckboxAttach:checked').length != $('.iptCheckboxAttach').length) {
                                            $('.masterCheckAttach').each(function() { //loop through each checkbox
                                            this.checked = false;  //select all checkboxes with class "checkbox1"
                                            });
                                        }
                                    </script>
                                    <apex:inputCheckbox id="checkAttach"
                                            onclick="checkAll(event,'checkAttach','masterCheckAttach');"
                                            styleClass="masterCheckAttach"/>
                                </apex:facet>
                                <apex:inputCheckbox value="{!attachmentWrapper.isRequired}"
                                        id="checkBoxAttachment"
                                        styleClass="iptCheckboxAttach"
                                        onclick="selectOne(event,'checkBoxAttachment','iptCheckboxAttach');"/>
                            </apex:column>

                            <apex:column headervalue="Record" value="{!attachmentWrapper.cnt}"/>

                            <apex:column headervalue="Action">
                                <apex:commandLink action="{!deleteAttachment}" value="Delete"
                                        rerender="Op"
                                        status="loadingAttachment"
                                        rendered="{!($ObjectType.Attachment.deletable)}">
                                    <apex:param name="indexToRemove" value="{!attachmentWrapper.attachment.Id}"
                                            assignTo="{!indexToRemove}">
                                    </apex:param>
                                </apex:commandLink>
                            </apex:column>

                            <apex:column headervalue="Name" headerClass="headerStyle">
                                <apex:actionRegion >
                                    <apex:outputField value="{!attachmentWrapper.attachment['name']}">
                                        <apex:inlineEditSupport disabled="true" />
                                    </apex:outputField>
                                </apex:actionRegion>
                            </apex:column>

                            <apex:column headerValue="Description" headerClass="headerStyle" id="descColumn">
                            <apex:actionRegion >
                                <apex:outputField value="{!attachmentWrapper.attachment['Description']}">
                                    <apex:inlineEditSupport disabled="false" event="ondblClick"
                                            showOnEdit="saveButton" />
                                </apex:outputField>
                            </apex:actionRegion>
                            </apex:column>

                            <apex:column headerClass="headerStyle">
                                <apex:facet name="header" >
                                    <apex:outputText value="Programs"/>
                                </apex:facet>
                                <apex:selectList value="{!attachmentWrapper.selectedPrograms}"
                                        rendered="{!showSelectList}"
                                        multiselect="true"
                                        size="4">
                                    <apex:selectOptions value="{!attachmentWrapper.options}"/>
                                </apex:selectList>
                            </apex:column>
                            <!--
                            <apex:column headerClass="headerStyle">
                                <apex:facet name="header">
                                    <apex:outputText value="Include"/>
                                </apex:facet>
                                <apex:inputCheckbox value="{!attachmentWrapper.isRequired}"
                                    onclick="checkUncheckAtt('{!attachmentWrapper.isRequired}','
                                    {!attachmentWrapper.attachment.Id}');showDisablingDiv();">
                                </apex:inputCheckbox>
                            </apex:column>
                            -->
                        </apex:pageBlockTable>

                        <apex:outputText value="No attachments present for this Opportunity."
                                id="sizeAttach"
                                rendered="{!AttachmentWrapperList.size == 0}"/>

                    </apex:pageblocksection>
                </apex:pageBlock>
                </apex:outputPanel>
                <!-- End of Available Attachment section -->
                <div align="center" class="cmb" style="padding-bottom: 20px;">
                    <!-- <apex:commandButton value="Create without Sending" action="{!createWithoutSending}" status="loadingAttachment"
                    rerender="form" oncomplete="checkErrorMessage();"/>
                    <apex:commandButton value="Send without Attachments" action="{!sendWithoutAttachment}" status="loadingAttachment"
                    rerender="form" oncomplete="checkErrorMessage();"/>
                    <apex:commandButton value="Send with Attachments" action="{!sendWithSelectedAttachments}" status="loadingAttachment"
                    rerender="form" oncomplete="checkErrorMessage();"/>  -->
                    <!--<apex:commandButton value="Submit" action="{!submitToSend}" status="loadingAttachment"
                            rerender="form" oncomplete="checkErrorMessage();"/>-->
                    <input type="button" class="slds-button slds-button--brand"
                        value="Submit" onclick="submitToSend();"
                        onComplete = "onCompleteHandler();"/>
                    <apex:actionFunction name="submitToSend" action="{!submitToSend}" status="loadingAttachment"
                            rerender="form" oncomplete="checkErrorMessage();onCompleteHandler();"/>
                    <!--<apex:commandButton value="Cancel" action="{!cancel}"
                            styleClass="slds-button slds-button--brand"/>-->
                    <input type="button" class="slds-button slds-button--brand"
                            value="Cancel" onclick="cancelSubmission();"/>
                    <apex:actionFunction name="cancelSubmission" action="{!cancel}"/>
                    <!--<apex:commandButton value="Add Attachments" action="{!openAttachment}"/>-->
                </div>
                <!--</apex:pageblock> -->

                <apex:actionFunction action="{!saveme}" name="saveAllAttch" rerender="pgBlkSctnAttachment"
                                    status="loadingAttachment" oncomplete="checkButton();"/>
                <apex:actionFunction action="{!CollectData}" name="collectDataBase64"
                                    reRender="form" status="loadingAttachment">
                    <apex:param name="data" id="data" value="" />
                    <apex:param name="name" id="name" value="" />
                </apex:actionFunction>
        </apex:pageblock>
        </div>
         <!-- End of Submission Wizard block -->

        <script type="text/javascript">
            var fName = new Array();
            var dropbox = document.getElementById('dropbox');
            var count = 0;
            // # Using an EventListener object
            var dropListener = {
                handleEvent: function(event) {
                    if (event.type === 'dragenter') { this.onDragEnter(event); }
                    if (event.type === 'dragexit') { this.onDragExit(event); }
                    if (event.type === 'dragover') { this.onDragOver(event); }
                    if (event.type === 'drop') { this.onDragDrop(event); }
                },

                onDragEnter: function(event) {
                    event.preventDefault();
                    event.stopPropagation();
                    console.debug('enter')
                },

                onDragExit: function(event) {
                    event.preventDefault();
                    event.stopPropagation();
                },

                onDragOver: function(event) {
                    event.preventDefault();
                    event.stopPropagation();
                },

                onDragDrop: function(event) {
                    event.preventDefault();
                    event.stopPropagation();
                    var isProcess = false;
                    var files = event.dataTransfer.files,
                    file = files;
                    if (files.length == 1 ) {
                        document.getElementById('droplabel').innerHTML ='Uploading ' + files[0].name;
                    }else if (files.length  >  1) {
                        document.getElementById('droplabel').innerHTML ='Uploading ' + files.length + ' files';
                    }
                    if (files.length) {
                        for (i = 0; i < files.length; i++) {
                            file = files[i];
                            if((files[i].size)/(1024*1024) < 4) {
                                isProcess = true;
                                //document.getElementById('droplabel').innerHTML = 'Uploading ' + file.name;
                                this.processImage(file, i);
                            } else
                                alert('The file size of ' +files[i].name
                                +' is too large for Drag and drop.Please use Attach File button to upload the file');
                        }
                        if(!isProcess)
                            refershCom();
                    }
                },

                processImage: function(file, i) {
                    fName.push(file.name);
                    if (! file.type.match('image.*')) {
                        //document.getElementById('droplabel').innerHTML ='Uploading ' + file.name;
                       // return;
                    }
                    var reader = new FileReader();
                    reader.onloadend = this.onReaderLoadEnd;
                    reader.readAsDataURL(file);
                },

                onReaderLoadEnd: function(event) {
                    var img = document.getElementById("preview");
                    img.src = event.target.result;
                    collectDataBase64(img.src, fName[count]);
                    count++;
                }
            };

            // ## Adding drag and drop event listeners
            dropbox.addEventListener('dragenter', dropListener, false);
            dropbox.addEventListener('dragexit', dropListener, false);
            dropbox.addEventListener('dragover', dropListener, false);
            dropbox.addEventListener('drop', dropListener, false);
            function runSaveAllAttachment() {
                setTimeout(function() {
                    saveAllAttch();
                }, 500);
            }
        </script>

        <div class="subWizardPageData">
        <apex:pageBlock id="thankYouBlock" 
            rendered="{!showThankYouPage}">
            <apex:outputPanel rendered="{!applicationSentToPgm.size > 0}">
                <apex:outputText value="{!$Label.Submission_MailSent}"
                        style="color:Green; font-weight: bold;"
                        rendered="{!IF(contains(channelVal,'Create without Sending'),false,true)}"/>
                <apex:outputText value="{!$Label.Submission_MailSent1}"
                        style="color:Green; font-weight: bold;"
                        rendered="{!IF(contains(channelVal,'Create without Sending'),true,false)}"/>
                <div class="cmb">
                <apex:dataTable value="{!applicationSentToPgm}" var="pgms"
                    styleClass="slds-table slds-table--bordered slds-table--striped">
                    <apex:column headerValue="Program Name" styleClass="columnWidth">
                        <apex:image url="{!URLFOR($Resource.SubmissionWizard,'SubmissionWizard/Sent.jpg')}"
                                width="20"
                                height="20"/>&nbsp;&nbsp;
                        <a href="{!URLFOR($Action.Program__c.View,pgms.Id, null,true)}">
                            {!pgms.Name}
                        </a>
                    </apex:column>
                    <apex:column headerValue="Bank Name" value="{!pgms.Bank__c}" styleClass="columnWidth"/>
                    <apex:column headerValue="Submission Email" value="{!pgms.Submission_Email__c}" styleClass="columnWidth"/>
                    <apex:column headerValue="Status" styleClass="columnWidth">
                        <apex:outputLabel value="UW" styleClass="columnWidth"/>
                    </apex:column>
                </apex:dataTable>
                </div>
                <br/>
            </apex:outputPanel>

            <style>
                .columnWidth{
                    width:250px;
                }
            </style>

            <apex:outputPanel rendered="{!OR(lstApplicationNotSentToPgm.size > 0, applicationNotSentToPgm.size > 0)}">
                <apex:outputText value="{!$Label.Submission_MailNotSent}"
                        rendered="{!lstApplicationNotSentToPgm.size > 0}"
                        style="color:Red; font-weight: bold; "
                        styleClass="slds-table slds-table--bordered slds-table--striped"/>
                    <div class="cmb">
                        <apex:dataTable value="{!lstApplicationNotSentToPgm}" var="pgms"
                                rendered="{!lstApplicationNotSentToPgm.size > 0}">
                        <apex:column headerValue="Program Name" styleClass="columnWidth" >
                            <apex:image url="{!URLFOR($Resource.SubmissionWizard,'SubmissionWizard/NotSent.jpg')}"
                                    width="16"
                                    height="16"/>&nbsp;&nbsp;
                            <apex:commandlink value="{!pgms.Name}" action="oncompleteHandler();" />
<!--                             <a href="{!URLFOR($Action.Program__c.View,pgms.Id, null,true)}"> -->
<!--                                 {!pgms.Name} -->
<!--                             </a> -->
                        </apex:column>
                        <apex:column headerValue="Bank Name" value="{!pgms.Bank__c}" styleClass="columnWidth"/>
                        <apex:column headerValue="Submission Email" value="{!pgms.Submission_Email__c}" styleClass="columnWidth"/>
                        <apex:column headerValue="Status" styleClass="columnWidth">
                            <apex:outputLabel value="UW" styleClass="columnWidth"/>
                        </apex:column>
                    </apex:dataTable>
                </div>

                <apex:outputText value="{!$Label.Submission_MailNotSentFunder}"
                        rendered="{!applicationNotSentToPgm.size > 0}"
                        style="color:Red; font-weight: bold; "  />
                <div class="cmb">
                    <apex:dataTable value="{!applicationNotSentToPgm}" var="pgms"
                            rendered="{!applicationNotSentToPgm.size > 0}"
                            styleClass="slds-table slds-table--bordered slds-table--striped">
                        <apex:column headerValue="Program Name" styleClass="columnWidth">
                            <apex:image url="{!URLFOR($Resource.SubmissionWizard,'SubmissionWizard/NotSent.jpg')}"
                                    width="16" height="16"/>&nbsp;&nbsp;
                            <a href="{!URLFOR($Action.Program__c.View,pgms.Id, null,true)}">
                                {!pgms.Name}
                            </a>
                        </apex:column>
                        <apex:column headerValue="Bank Name" value="{!pgms.Bank__c}" styleClass="columnWidth"/>
                        <apex:column headerValue="Submission Email" value="{!pgms.Submission_Email__c}" styleClass="columnWidth"/>
                        <apex:column headerValue="Status" styleClass="columnWidth">
                            <apex:outputLabel value="UW" styleClass="columnWidth"/>
                        </apex:column>
                    </apex:dataTable>
                </div>
            </apex:outputPanel>

            <!--<apex:outputLink value="{!URLFOR($Action.Opportunity.View,oppId, null,true)}">
                <apex:outputText value="<< Back to Opportunity"/> </apex:outputLink>-->
            <!--<apex:commandLink action="{!bckToOpportunity}" value="<< Back to Opportunity"
                    id="returnCommandLink"/>-->
        </apex:pageBlock>
        </div>
        <!-- End of Thank You Page -->

        <apex:actionFunction name="navigateToOpp" action="{!bckToOpportunity}"/>

    </apex:form>
    </body>
    <script type="text/javascript" >
        function noenter(e){
            if(window.event){
                key = window.event.keyCode; //IE
            } else {
                key = e.which; //firefox
            }// end else - if

            if(key == 13) {
                var ele=document.getElementById("{!$Component.filterBtn}").id;
                document.getElementById(ele).click();
                return false;
            } else {
                return true;
            }// end else - if
        }//end noenter()

        function showDisablingDiv() {
            //document.getElementById('disablingDiv').style.display='block';
        }// end showDisablingDiv()

        function hideDisablingDiv() {
            //document.getElementById('disablingDiv').style.display='none';
        }// end hideDisablingDiv()

        function focusOn(val) {
            var checkboxId = val;
            document.getElementById(checkboxId).focus();
        }// end focusOn()
    </script>

</apex:page>