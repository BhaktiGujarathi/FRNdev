<apex:page standardController="case" showHeader="false" sidebar="false">

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>

 <apex:form >
 <script>
    
</script>
 <script>

    
        
        function CopyToClipboard () {
            var textToClipboard = '';
            var dob = $(".dob").text();
            var conIfo = '\r\n'+'Patient: '+'{!case.Opportunity__r.Contact__r.Name}'+'\r\n'+'DOB: '+ dob +'\r\n'+'Gender: '+'{!case.Opportunity__r.Contact__r.Gender__c}'+'\r\n'+'Opportunity ID: '+'{!case.Opportunity__c}';
         
             textToClipboard = conIfo +'\r\n\r\n';
            var redFlagCotent = '{!case.Red_Flag_Details__c}';  
            $("#content2").html(redFlagCotent);
            $('#content2').find('td').each(function(){
              textToClipboard += $(this).text()+'\r\n';
            });
          
            var success = true;
            if (window.clipboardData) { // Internet Explorer
                window.clipboardData.setData ("Text", textToClipboard);
                
            }
            else {
                    // create a temporary element for the execCommand method
                var forExecElement = CreateElementForExecCommand (textToClipboard);
                 

                        /* Select the contents of the element 
                            (the execCommand for 'copy' method works on the selection) */
                SelectContent (forExecElement);

                var supported = true;

                    // UniversalXPConnect privilege is required for clipboard access in Firefox
                try {
                    if (window.netscape && netscape.security) {
                        netscape.security.PrivilegeManager.enablePrivilege ("UniversalXPConnect");
                         this.jsConsole = Components.classes["@mozilla.org/consoleservice;1"].getService(Components.interfaces.nsIConsoleService);
  this.scriptError = Components.classes["@mozilla.org/scripterror;1"].createInstance(Components.interfaces.nsIScriptError);
                    }

                        // Copy the selected content to the clipboard
                        // Works in Firefox and in Safari before version 5
                    success = document.execCommand ("copy", false, null);
                }
                catch (e) {
                    success = false;
                }
                
                    // remove the temporary element
                document.body.removeChild (forExecElement);
            }

            if (success) {    
               
            }
            else {
                alert ("Your browser doesn't allow clipboard access!");
                 //self.close();
                
            }
        }

        function CreateElementForExecCommand (textToClipboard) {
            var forExecElement = document.createElement ("div");
                // place outside the visible area
            forExecElement.style.position = "absolute";
            forExecElement.style.left = "-10000px";
            forExecElement.style.top = "-10000px";
                // write the necessary text into the element and append to the document
            forExecElement.textContent = textToClipboard;
            document.body.appendChild (forExecElement);
                // the contentEditable mode is necessary for the  execCommand method in Firefox
            forExecElement.contentEditable = true;

            return forExecElement;
        }

        function SelectContent (element) {
                // first create a range
            var rangeToSelect = document.createRange ();
            rangeToSelect.selectNodeContents (element);

                // select the contents
            var selection = window.getSelection ();
            selection.removeAllRanges ();
            selection.addRange (rangeToSelect);
            
        }
        
        
    </script>
    <style>
    .classa{
        vertical-align:top; 
    }
    .classb{
    vertical-align:top;
    text-align:left;
    }
    </style>

     <br/> 
     Please click Ok to confirm.
     <br/>
     
     <br/>
	 <apex:outputText style="display:none;" styleClass="dob" value="{0,date, MM/dd/YYYY}"><apex:param value="{!case.Opportunity__r.Contact__r.BirthDate}"/></apex:outputText>
           
    <a href="/{!case.id}" target="_parent" onclick="CopyToClipboard()" style="display: block; width: 50px; height: 14px; background: #2191c0; padding: 5px; text-align: center; border-radius: 3px; color: white; font-weight: bold; text-decoration: none; margin-left: 108px;">Ok</a>
   </apex:form> 
   <div id="content2" style="display:none">
   
   </div>
    
</apex:page>